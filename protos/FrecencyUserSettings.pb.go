// Credits to https://github.com/dolfies/discord-protos

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protos/FrecencyUserSettings.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrecencyUserSettings_GIFType int32

const (
	FrecencyUserSettings_GIF_TYPE_NONE  FrecencyUserSettings_GIFType = 0
	FrecencyUserSettings_GIF_TYPE_IMAGE FrecencyUserSettings_GIFType = 1
	FrecencyUserSettings_GIF_TYPE_VIDEO FrecencyUserSettings_GIFType = 2
)

// Enum value maps for FrecencyUserSettings_GIFType.
var (
	FrecencyUserSettings_GIFType_name = map[int32]string{
		0: "GIF_TYPE_NONE",
		1: "GIF_TYPE_IMAGE",
		2: "GIF_TYPE_VIDEO",
	}
	FrecencyUserSettings_GIFType_value = map[string]int32{
		"GIF_TYPE_NONE":  0,
		"GIF_TYPE_IMAGE": 1,
		"GIF_TYPE_VIDEO": 2,
	}
)

func (x FrecencyUserSettings_GIFType) Enum() *FrecencyUserSettings_GIFType {
	p := new(FrecencyUserSettings_GIFType)
	*p = x
	return p
}

func (x FrecencyUserSettings_GIFType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrecencyUserSettings_GIFType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_FrecencyUserSettings_proto_enumTypes[0].Descriptor()
}

func (FrecencyUserSettings_GIFType) Type() protoreflect.EnumType {
	return &file_protos_FrecencyUserSettings_proto_enumTypes[0]
}

func (x FrecencyUserSettings_GIFType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrecencyUserSettings_GIFType.Descriptor instead.
func (FrecencyUserSettings_GIFType) EnumDescriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 0}
}

type FrecencyUserSettings struct {
	state                      protoimpl.MessageState                           `protogen:"open.v1"`
	Versions                   *FrecencyUserSettings_Versions                   `protobuf:"bytes,1,opt,name=versions,proto3,oneof" json:"versions,omitempty"`
	FavoriteGifs               *FrecencyUserSettings_FavoriteGIFs               `protobuf:"bytes,2,opt,name=favorite_gifs,json=favoriteGifs,proto3,oneof" json:"favorite_gifs,omitempty"`
	FavoriteStickers           *FrecencyUserSettings_FavoriteStickers           `protobuf:"bytes,3,opt,name=favorite_stickers,json=favoriteStickers,proto3,oneof" json:"favorite_stickers,omitempty"`
	StickerFrecency            *FrecencyUserSettings_StickerFrecency            `protobuf:"bytes,4,opt,name=sticker_frecency,json=stickerFrecency,proto3,oneof" json:"sticker_frecency,omitempty"`
	FavoriteEmojis             *FrecencyUserSettings_FavoriteEmojis             `protobuf:"bytes,5,opt,name=favorite_emojis,json=favoriteEmojis,proto3,oneof" json:"favorite_emojis,omitempty"`
	EmojiFrecency              *FrecencyUserSettings_EmojiFrecency              `protobuf:"bytes,6,opt,name=emoji_frecency,json=emojiFrecency,proto3,oneof" json:"emoji_frecency,omitempty"`
	ApplicationCommandFrecency *FrecencyUserSettings_ApplicationCommandFrecency `protobuf:"bytes,7,opt,name=application_command_frecency,json=applicationCommandFrecency,proto3,oneof" json:"application_command_frecency,omitempty"`
	FavoriteSoundboardSounds   *FrecencyUserSettings_FavoriteSoundboardSounds   `protobuf:"bytes,8,opt,name=favorite_soundboard_sounds,json=favoriteSoundboardSounds,proto3,oneof" json:"favorite_soundboard_sounds,omitempty"`
	ApplicationFrecency        *FrecencyUserSettings_ApplicationFrecency        `protobuf:"bytes,9,opt,name=application_frecency,json=applicationFrecency,proto3,oneof" json:"application_frecency,omitempty"`
	HeardSoundFrecency         *FrecencyUserSettings_HeardSoundFrecency         `protobuf:"bytes,10,opt,name=heard_sound_frecency,json=heardSoundFrecency,proto3,oneof" json:"heard_sound_frecency,omitempty"`
	PlayedSoundFrecency        *FrecencyUserSettings_PlayedSoundFrecency        `protobuf:"bytes,11,opt,name=played_sound_frecency,json=playedSoundFrecency,proto3,oneof" json:"played_sound_frecency,omitempty"`
	GuildAndChannelFrecency    *FrecencyUserSettings_GuildAndChannelFrecency    `protobuf:"bytes,12,opt,name=guild_and_channel_frecency,json=guildAndChannelFrecency,proto3,oneof" json:"guild_and_channel_frecency,omitempty"`
	EmojiReactionFrecency      *FrecencyUserSettings_EmojiFrecency              `protobuf:"bytes,13,opt,name=emoji_reaction_frecency,json=emojiReactionFrecency,proto3,oneof" json:"emoji_reaction_frecency,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *FrecencyUserSettings) Reset() {
	*x = FrecencyUserSettings{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings) ProtoMessage() {}

func (x *FrecencyUserSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0}
}

func (x *FrecencyUserSettings) GetVersions() *FrecencyUserSettings_Versions {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *FrecencyUserSettings) GetFavoriteGifs() *FrecencyUserSettings_FavoriteGIFs {
	if x != nil {
		return x.FavoriteGifs
	}
	return nil
}

func (x *FrecencyUserSettings) GetFavoriteStickers() *FrecencyUserSettings_FavoriteStickers {
	if x != nil {
		return x.FavoriteStickers
	}
	return nil
}

func (x *FrecencyUserSettings) GetStickerFrecency() *FrecencyUserSettings_StickerFrecency {
	if x != nil {
		return x.StickerFrecency
	}
	return nil
}

func (x *FrecencyUserSettings) GetFavoriteEmojis() *FrecencyUserSettings_FavoriteEmojis {
	if x != nil {
		return x.FavoriteEmojis
	}
	return nil
}

func (x *FrecencyUserSettings) GetEmojiFrecency() *FrecencyUserSettings_EmojiFrecency {
	if x != nil {
		return x.EmojiFrecency
	}
	return nil
}

func (x *FrecencyUserSettings) GetApplicationCommandFrecency() *FrecencyUserSettings_ApplicationCommandFrecency {
	if x != nil {
		return x.ApplicationCommandFrecency
	}
	return nil
}

func (x *FrecencyUserSettings) GetFavoriteSoundboardSounds() *FrecencyUserSettings_FavoriteSoundboardSounds {
	if x != nil {
		return x.FavoriteSoundboardSounds
	}
	return nil
}

func (x *FrecencyUserSettings) GetApplicationFrecency() *FrecencyUserSettings_ApplicationFrecency {
	if x != nil {
		return x.ApplicationFrecency
	}
	return nil
}

func (x *FrecencyUserSettings) GetHeardSoundFrecency() *FrecencyUserSettings_HeardSoundFrecency {
	if x != nil {
		return x.HeardSoundFrecency
	}
	return nil
}

func (x *FrecencyUserSettings) GetPlayedSoundFrecency() *FrecencyUserSettings_PlayedSoundFrecency {
	if x != nil {
		return x.PlayedSoundFrecency
	}
	return nil
}

func (x *FrecencyUserSettings) GetGuildAndChannelFrecency() *FrecencyUserSettings_GuildAndChannelFrecency {
	if x != nil {
		return x.GuildAndChannelFrecency
	}
	return nil
}

func (x *FrecencyUserSettings) GetEmojiReactionFrecency() *FrecencyUserSettings_EmojiFrecency {
	if x != nil {
		return x.EmojiReactionFrecency
	}
	return nil
}

type FrecencyUserSettings_Versions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientVersion uint32                 `protobuf:"varint,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ServerVersion uint32                 `protobuf:"varint,2,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	DataVersion   uint32                 `protobuf:"varint,3,opt,name=data_version,json=dataVersion,proto3" json:"data_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_Versions) Reset() {
	*x = FrecencyUserSettings_Versions{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_Versions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_Versions) ProtoMessage() {}

func (x *FrecencyUserSettings_Versions) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_Versions.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_Versions) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FrecencyUserSettings_Versions) GetClientVersion() uint32 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

func (x *FrecencyUserSettings_Versions) GetServerVersion() uint32 {
	if x != nil {
		return x.ServerVersion
	}
	return 0
}

func (x *FrecencyUserSettings_Versions) GetDataVersion() uint32 {
	if x != nil {
		return x.DataVersion
	}
	return 0
}

type FrecencyUserSettings_FavoriteGIF struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Format        FrecencyUserSettings_GIFType `protobuf:"varint,1,opt,name=format,proto3,enum=discord_protos.discord_users.v1.FrecencyUserSettings_GIFType" json:"format,omitempty"`
	Src           string                       `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Width         uint32                       `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                       `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Order         uint32                       `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_FavoriteGIF) Reset() {
	*x = FrecencyUserSettings_FavoriteGIF{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_FavoriteGIF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_FavoriteGIF) ProtoMessage() {}

func (x *FrecencyUserSettings_FavoriteGIF) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_FavoriteGIF.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_FavoriteGIF) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 1}
}

func (x *FrecencyUserSettings_FavoriteGIF) GetFormat() FrecencyUserSettings_GIFType {
	if x != nil {
		return x.Format
	}
	return FrecencyUserSettings_GIF_TYPE_NONE
}

func (x *FrecencyUserSettings_FavoriteGIF) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *FrecencyUserSettings_FavoriteGIF) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *FrecencyUserSettings_FavoriteGIF) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *FrecencyUserSettings_FavoriteGIF) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type FrecencyUserSettings_FavoriteGIFs struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Gifs          map[string]*FrecencyUserSettings_FavoriteGIF `protobuf:"bytes,1,rep,name=gifs,proto3" json:"gifs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HideTooltip   bool                                         `protobuf:"varint,2,opt,name=hide_tooltip,json=hideTooltip,proto3" json:"hide_tooltip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_FavoriteGIFs) Reset() {
	*x = FrecencyUserSettings_FavoriteGIFs{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_FavoriteGIFs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_FavoriteGIFs) ProtoMessage() {}

func (x *FrecencyUserSettings_FavoriteGIFs) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_FavoriteGIFs.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_FavoriteGIFs) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 2}
}

func (x *FrecencyUserSettings_FavoriteGIFs) GetGifs() map[string]*FrecencyUserSettings_FavoriteGIF {
	if x != nil {
		return x.Gifs
	}
	return nil
}

func (x *FrecencyUserSettings_FavoriteGIFs) GetHideTooltip() bool {
	if x != nil {
		return x.HideTooltip
	}
	return false
}

type FrecencyUserSettings_FavoriteStickers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StickerIds    []uint64               `protobuf:"fixed64,1,rep,packed,name=sticker_ids,json=stickerIds,proto3" json:"sticker_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_FavoriteStickers) Reset() {
	*x = FrecencyUserSettings_FavoriteStickers{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_FavoriteStickers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_FavoriteStickers) ProtoMessage() {}

func (x *FrecencyUserSettings_FavoriteStickers) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_FavoriteStickers.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_FavoriteStickers) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 3}
}

func (x *FrecencyUserSettings_FavoriteStickers) GetStickerIds() []uint64 {
	if x != nil {
		return x.StickerIds
	}
	return nil
}

type FrecencyUserSettings_FrecencyItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalUses     uint32                 `protobuf:"varint,1,opt,name=total_uses,json=totalUses,proto3" json:"total_uses,omitempty"`
	RecentUses    []uint64               `protobuf:"varint,2,rep,packed,name=recent_uses,json=recentUses,proto3" json:"recent_uses,omitempty"`
	Frecency      int32                  `protobuf:"varint,3,opt,name=frecency,proto3" json:"frecency,omitempty"`
	Score         int32                  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_FrecencyItem) Reset() {
	*x = FrecencyUserSettings_FrecencyItem{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_FrecencyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_FrecencyItem) ProtoMessage() {}

func (x *FrecencyUserSettings_FrecencyItem) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_FrecencyItem.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_FrecencyItem) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 4}
}

func (x *FrecencyUserSettings_FrecencyItem) GetTotalUses() uint32 {
	if x != nil {
		return x.TotalUses
	}
	return 0
}

func (x *FrecencyUserSettings_FrecencyItem) GetRecentUses() []uint64 {
	if x != nil {
		return x.RecentUses
	}
	return nil
}

func (x *FrecencyUserSettings_FrecencyItem) GetFrecency() int32 {
	if x != nil {
		return x.Frecency
	}
	return 0
}

func (x *FrecencyUserSettings_FrecencyItem) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type FrecencyUserSettings_StickerFrecency struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Stickers      map[uint64]*FrecencyUserSettings_FrecencyItem `protobuf:"bytes,1,rep,name=stickers,proto3" json:"stickers,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_StickerFrecency) Reset() {
	*x = FrecencyUserSettings_StickerFrecency{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_StickerFrecency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_StickerFrecency) ProtoMessage() {}

func (x *FrecencyUserSettings_StickerFrecency) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_StickerFrecency.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_StickerFrecency) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 5}
}

func (x *FrecencyUserSettings_StickerFrecency) GetStickers() map[uint64]*FrecencyUserSettings_FrecencyItem {
	if x != nil {
		return x.Stickers
	}
	return nil
}

type FrecencyUserSettings_FavoriteEmojis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Emojis        []string               `protobuf:"bytes,1,rep,name=emojis,proto3" json:"emojis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_FavoriteEmojis) Reset() {
	*x = FrecencyUserSettings_FavoriteEmojis{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_FavoriteEmojis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_FavoriteEmojis) ProtoMessage() {}

func (x *FrecencyUserSettings_FavoriteEmojis) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_FavoriteEmojis.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_FavoriteEmojis) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 6}
}

func (x *FrecencyUserSettings_FavoriteEmojis) GetEmojis() []string {
	if x != nil {
		return x.Emojis
	}
	return nil
}

type FrecencyUserSettings_EmojiFrecency struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Emojis        map[string]*FrecencyUserSettings_FrecencyItem `protobuf:"bytes,1,rep,name=emojis,proto3" json:"emojis,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_EmojiFrecency) Reset() {
	*x = FrecencyUserSettings_EmojiFrecency{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_EmojiFrecency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_EmojiFrecency) ProtoMessage() {}

func (x *FrecencyUserSettings_EmojiFrecency) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_EmojiFrecency.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_EmojiFrecency) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 7}
}

func (x *FrecencyUserSettings_EmojiFrecency) GetEmojis() map[string]*FrecencyUserSettings_FrecencyItem {
	if x != nil {
		return x.Emojis
	}
	return nil
}

type FrecencyUserSettings_ApplicationCommandFrecency struct {
	state               protoimpl.MessageState                        `protogen:"open.v1"`
	ApplicationCommands map[string]*FrecencyUserSettings_FrecencyItem `protobuf:"bytes,1,rep,name=application_commands,json=applicationCommands,proto3" json:"application_commands,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FrecencyUserSettings_ApplicationCommandFrecency) Reset() {
	*x = FrecencyUserSettings_ApplicationCommandFrecency{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_ApplicationCommandFrecency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_ApplicationCommandFrecency) ProtoMessage() {}

func (x *FrecencyUserSettings_ApplicationCommandFrecency) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_ApplicationCommandFrecency.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_ApplicationCommandFrecency) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 8}
}

func (x *FrecencyUserSettings_ApplicationCommandFrecency) GetApplicationCommands() map[string]*FrecencyUserSettings_FrecencyItem {
	if x != nil {
		return x.ApplicationCommands
	}
	return nil
}

type FrecencyUserSettings_FavoriteSoundboardSounds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SoundIds      []uint64               `protobuf:"fixed64,1,rep,packed,name=sound_ids,json=soundIds,proto3" json:"sound_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_FavoriteSoundboardSounds) Reset() {
	*x = FrecencyUserSettings_FavoriteSoundboardSounds{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_FavoriteSoundboardSounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_FavoriteSoundboardSounds) ProtoMessage() {}

func (x *FrecencyUserSettings_FavoriteSoundboardSounds) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_FavoriteSoundboardSounds.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_FavoriteSoundboardSounds) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 9}
}

func (x *FrecencyUserSettings_FavoriteSoundboardSounds) GetSoundIds() []uint64 {
	if x != nil {
		return x.SoundIds
	}
	return nil
}

type FrecencyUserSettings_ApplicationFrecency struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Applications  map[string]*FrecencyUserSettings_FrecencyItem `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_ApplicationFrecency) Reset() {
	*x = FrecencyUserSettings_ApplicationFrecency{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_ApplicationFrecency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_ApplicationFrecency) ProtoMessage() {}

func (x *FrecencyUserSettings_ApplicationFrecency) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_ApplicationFrecency.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_ApplicationFrecency) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 10}
}

func (x *FrecencyUserSettings_ApplicationFrecency) GetApplications() map[string]*FrecencyUserSettings_FrecencyItem {
	if x != nil {
		return x.Applications
	}
	return nil
}

type FrecencyUserSettings_HeardSoundFrecency struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	HeardSounds   map[string]*FrecencyUserSettings_FrecencyItem `protobuf:"bytes,1,rep,name=heard_sounds,json=heardSounds,proto3" json:"heard_sounds,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_HeardSoundFrecency) Reset() {
	*x = FrecencyUserSettings_HeardSoundFrecency{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_HeardSoundFrecency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_HeardSoundFrecency) ProtoMessage() {}

func (x *FrecencyUserSettings_HeardSoundFrecency) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_HeardSoundFrecency.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_HeardSoundFrecency) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 11}
}

func (x *FrecencyUserSettings_HeardSoundFrecency) GetHeardSounds() map[string]*FrecencyUserSettings_FrecencyItem {
	if x != nil {
		return x.HeardSounds
	}
	return nil
}

type FrecencyUserSettings_PlayedSoundFrecency struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	PlayedSounds  map[string]*FrecencyUserSettings_FrecencyItem `protobuf:"bytes,1,rep,name=played_sounds,json=playedSounds,proto3" json:"played_sounds,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrecencyUserSettings_PlayedSoundFrecency) Reset() {
	*x = FrecencyUserSettings_PlayedSoundFrecency{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_PlayedSoundFrecency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_PlayedSoundFrecency) ProtoMessage() {}

func (x *FrecencyUserSettings_PlayedSoundFrecency) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_PlayedSoundFrecency.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_PlayedSoundFrecency) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 12}
}

func (x *FrecencyUserSettings_PlayedSoundFrecency) GetPlayedSounds() map[string]*FrecencyUserSettings_FrecencyItem {
	if x != nil {
		return x.PlayedSounds
	}
	return nil
}

type FrecencyUserSettings_GuildAndChannelFrecency struct {
	state            protoimpl.MessageState                        `protogen:"open.v1"`
	GuildAndChannels map[uint64]*FrecencyUserSettings_FrecencyItem `protobuf:"bytes,1,rep,name=guild_and_channels,json=guildAndChannels,proto3" json:"guild_and_channels,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FrecencyUserSettings_GuildAndChannelFrecency) Reset() {
	*x = FrecencyUserSettings_GuildAndChannelFrecency{}
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrecencyUserSettings_GuildAndChannelFrecency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrecencyUserSettings_GuildAndChannelFrecency) ProtoMessage() {}

func (x *FrecencyUserSettings_GuildAndChannelFrecency) ProtoReflect() protoreflect.Message {
	mi := &file_protos_FrecencyUserSettings_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrecencyUserSettings_GuildAndChannelFrecency.ProtoReflect.Descriptor instead.
func (*FrecencyUserSettings_GuildAndChannelFrecency) Descriptor() ([]byte, []int) {
	return file_protos_FrecencyUserSettings_proto_rawDescGZIP(), []int{0, 13}
}

func (x *FrecencyUserSettings_GuildAndChannelFrecency) GetGuildAndChannels() map[uint64]*FrecencyUserSettings_FrecencyItem {
	if x != nil {
		return x.GuildAndChannels
	}
	return nil
}

var File_protos_FrecencyUserSettings_proto protoreflect.FileDescriptor

const file_protos_FrecencyUserSettings_proto_rawDesc = "" +
	"\n" +
	"!protos/FrecencyUserSettings.proto\x12\x1fdiscord_protos.discord_users.v1\"\xd0&\n" +
	"\x14FrecencyUserSettings\x12_\n" +
	"\bversions\x18\x01 \x01(\v2>.discord_protos.discord_users.v1.FrecencyUserSettings.VersionsH\x00R\bversions\x88\x01\x01\x12l\n" +
	"\rfavorite_gifs\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFsH\x01R\ffavoriteGifs\x88\x01\x01\x12x\n" +
	"\x11favorite_stickers\x18\x03 \x01(\v2F.discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteStickersH\x02R\x10favoriteStickers\x88\x01\x01\x12u\n" +
	"\x10sticker_frecency\x18\x04 \x01(\v2E.discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecencyH\x03R\x0fstickerFrecency\x88\x01\x01\x12r\n" +
	"\x0ffavorite_emojis\x18\x05 \x01(\v2D.discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteEmojisH\x04R\x0efavoriteEmojis\x88\x01\x01\x12o\n" +
	"\x0eemoji_frecency\x18\x06 \x01(\v2C.discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecencyH\x05R\remojiFrecency\x88\x01\x01\x12\x97\x01\n" +
	"\x1capplication_command_frecency\x18\a \x01(\v2P.discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecencyH\x06R\x1aapplicationCommandFrecency\x88\x01\x01\x12\x91\x01\n" +
	"\x1afavorite_soundboard_sounds\x18\b \x01(\v2N.discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteSoundboardSoundsH\aR\x18favoriteSoundboardSounds\x88\x01\x01\x12\x81\x01\n" +
	"\x14application_frecency\x18\t \x01(\v2I.discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecencyH\bR\x13applicationFrecency\x88\x01\x01\x12\x7f\n" +
	"\x14heard_sound_frecency\x18\n" +
	" \x01(\v2H.discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecencyH\tR\x12heardSoundFrecency\x88\x01\x01\x12\x82\x01\n" +
	"\x15played_sound_frecency\x18\v \x01(\v2I.discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecencyH\n" +
	"R\x13playedSoundFrecency\x88\x01\x01\x12\x8f\x01\n" +
	"\x1aguild_and_channel_frecency\x18\f \x01(\v2M.discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecencyH\vR\x17guildAndChannelFrecency\x88\x01\x01\x12\x80\x01\n" +
	"\x17emoji_reaction_frecency\x18\r \x01(\v2C.discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecencyH\fR\x15emojiReactionFrecency\x88\x01\x01\x1a{\n" +
	"\bVersions\x12%\n" +
	"\x0eclient_version\x18\x01 \x01(\rR\rclientVersion\x12%\n" +
	"\x0eserver_version\x18\x02 \x01(\rR\rserverVersion\x12!\n" +
	"\fdata_version\x18\x03 \x01(\rR\vdataVersion\x1a\xba\x01\n" +
	"\vFavoriteGIF\x12U\n" +
	"\x06format\x18\x01 \x01(\x0e2=.discord_protos.discord_users.v1.FrecencyUserSettings.GIFTypeR\x06format\x12\x10\n" +
	"\x03src\x18\x02 \x01(\tR\x03src\x12\x14\n" +
	"\x05width\x18\x03 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\rR\x06height\x12\x14\n" +
	"\x05order\x18\x05 \x01(\rR\x05order\x1a\x8f\x02\n" +
	"\fFavoriteGIFs\x12`\n" +
	"\x04gifs\x18\x01 \x03(\v2L.discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFs.GifsEntryR\x04gifs\x12!\n" +
	"\fhide_tooltip\x18\x02 \x01(\bR\vhideTooltip\x1az\n" +
	"\tGifsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12W\n" +
	"\x05value\x18\x02 \x01(\v2A.discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFR\x05value:\x028\x01\x1a3\n" +
	"\x10FavoriteStickers\x12\x1f\n" +
	"\vsticker_ids\x18\x01 \x03(\x06R\n" +
	"stickerIds\x1a\x80\x01\n" +
	"\fFrecencyItem\x12\x1d\n" +
	"\n" +
	"total_uses\x18\x01 \x01(\rR\ttotalUses\x12\x1f\n" +
	"\vrecent_uses\x18\x02 \x03(\x04R\n" +
	"recentUses\x12\x1a\n" +
	"\bfrecency\x18\x03 \x01(\x05R\bfrecency\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x05R\x05score\x1a\x83\x02\n" +
	"\x0fStickerFrecency\x12o\n" +
	"\bstickers\x18\x01 \x03(\v2S.discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecency.StickersEntryR\bstickers\x1a\x7f\n" +
	"\rStickersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x06R\x03key\x12X\n" +
	"\x05value\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItemR\x05value:\x028\x01\x1a,\n" +
	"\x0eFavoriteEmojis\x12\x1a\n" +
	"\x06emojis\x18\x01 \x03(\tB\x02\x10\x00R\x06emojis\x1a\xf7\x01\n" +
	"\rEmojiFrecency\x12g\n" +
	"\x06emojis\x18\x01 \x03(\v2O.discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency.EmojisEntryR\x06emojis\x1a}\n" +
	"\vEmojisEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12X\n" +
	"\x05value\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItemR\x05value:\x028\x01\x1a\xc8\x02\n" +
	"\x1aApplicationCommandFrecency\x12\x9c\x01\n" +
	"\x14application_commands\x18\x01 \x03(\v2i.discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecency.ApplicationCommandsEntryR\x13applicationCommands\x1a\x8a\x01\n" +
	"\x18ApplicationCommandsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12X\n" +
	"\x05value\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItemR\x05value:\x028\x01\x1a7\n" +
	"\x18FavoriteSoundboardSounds\x12\x1b\n" +
	"\tsound_ids\x18\x01 \x03(\x06R\bsoundIds\x1a\x9c\x02\n" +
	"\x13ApplicationFrecency\x12\x7f\n" +
	"\fapplications\x18\x01 \x03(\v2[.discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecency.ApplicationsEntryR\fapplications\x1a\x83\x01\n" +
	"\x11ApplicationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12X\n" +
	"\x05value\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItemR\x05value:\x028\x01\x1a\x97\x02\n" +
	"\x12HeardSoundFrecency\x12|\n" +
	"\fheard_sounds\x18\x01 \x03(\v2Y.discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecency.HeardSoundsEntryR\vheardSounds\x1a\x82\x01\n" +
	"\x10HeardSoundsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12X\n" +
	"\x05value\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItemR\x05value:\x028\x01\x1a\x9e\x02\n" +
	"\x13PlayedSoundFrecency\x12\x80\x01\n" +
	"\rplayed_sounds\x18\x01 \x03(\v2[.discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecency.PlayedSoundsEntryR\fplayedSounds\x1a\x83\x01\n" +
	"\x11PlayedSoundsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12X\n" +
	"\x05value\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItemR\x05value:\x028\x01\x1a\xb7\x02\n" +
	"\x17GuildAndChannelFrecency\x12\x91\x01\n" +
	"\x12guild_and_channels\x18\x01 \x03(\v2c.discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecency.GuildAndChannelsEntryR\x10guildAndChannels\x1a\x87\x01\n" +
	"\x15GuildAndChannelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x06R\x03key\x12X\n" +
	"\x05value\x18\x02 \x01(\v2B.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItemR\x05value:\x028\x01\"D\n" +
	"\aGIFType\x12\x11\n" +
	"\rGIF_TYPE_NONE\x10\x00\x12\x12\n" +
	"\x0eGIF_TYPE_IMAGE\x10\x01\x12\x12\n" +
	"\x0eGIF_TYPE_VIDEO\x10\x02B\v\n" +
	"\t_versionsB\x10\n" +
	"\x0e_favorite_gifsB\x14\n" +
	"\x12_favorite_stickersB\x13\n" +
	"\x11_sticker_frecencyB\x12\n" +
	"\x10_favorite_emojisB\x11\n" +
	"\x0f_emoji_frecencyB\x1f\n" +
	"\x1d_application_command_frecencyB\x1d\n" +
	"\x1b_favorite_soundboard_soundsB\x17\n" +
	"\x15_application_frecencyB\x17\n" +
	"\x15_heard_sound_frecencyB\x18\n" +
	"\x16_played_sound_frecencyB\x1d\n" +
	"\x1b_guild_and_channel_frecencyB\x1a\n" +
	"\x18_emoji_reaction_frecencyb\x06proto3"

var (
	file_protos_FrecencyUserSettings_proto_rawDescOnce sync.Once
	file_protos_FrecencyUserSettings_proto_rawDescData []byte
)

func file_protos_FrecencyUserSettings_proto_rawDescGZIP() []byte {
	file_protos_FrecencyUserSettings_proto_rawDescOnce.Do(func() {
		file_protos_FrecencyUserSettings_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_FrecencyUserSettings_proto_rawDesc), len(file_protos_FrecencyUserSettings_proto_rawDesc)))
	})
	return file_protos_FrecencyUserSettings_proto_rawDescData
}

var file_protos_FrecencyUserSettings_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_FrecencyUserSettings_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_protos_FrecencyUserSettings_proto_goTypes = []any{
	(FrecencyUserSettings_GIFType)(0),                       // 0: discord_protos.discord_users.v1.FrecencyUserSettings.GIFType
	(*FrecencyUserSettings)(nil),                            // 1: discord_protos.discord_users.v1.FrecencyUserSettings
	(*FrecencyUserSettings_Versions)(nil),                   // 2: discord_protos.discord_users.v1.FrecencyUserSettings.Versions
	(*FrecencyUserSettings_FavoriteGIF)(nil),                // 3: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIF
	(*FrecencyUserSettings_FavoriteGIFs)(nil),               // 4: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFs
	(*FrecencyUserSettings_FavoriteStickers)(nil),           // 5: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteStickers
	(*FrecencyUserSettings_FrecencyItem)(nil),               // 6: discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	(*FrecencyUserSettings_StickerFrecency)(nil),            // 7: discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecency
	(*FrecencyUserSettings_FavoriteEmojis)(nil),             // 8: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteEmojis
	(*FrecencyUserSettings_EmojiFrecency)(nil),              // 9: discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency
	(*FrecencyUserSettings_ApplicationCommandFrecency)(nil), // 10: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecency
	(*FrecencyUserSettings_FavoriteSoundboardSounds)(nil),   // 11: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteSoundboardSounds
	(*FrecencyUserSettings_ApplicationFrecency)(nil),        // 12: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecency
	(*FrecencyUserSettings_HeardSoundFrecency)(nil),         // 13: discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecency
	(*FrecencyUserSettings_PlayedSoundFrecency)(nil),        // 14: discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecency
	(*FrecencyUserSettings_GuildAndChannelFrecency)(nil),    // 15: discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecency
	nil, // 16: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFs.GifsEntry
	nil, // 17: discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecency.StickersEntry
	nil, // 18: discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency.EmojisEntry
	nil, // 19: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecency.ApplicationCommandsEntry
	nil, // 20: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecency.ApplicationsEntry
	nil, // 21: discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecency.HeardSoundsEntry
	nil, // 22: discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecency.PlayedSoundsEntry
	nil, // 23: discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecency.GuildAndChannelsEntry
}
var file_protos_FrecencyUserSettings_proto_depIdxs = []int32{
	2,  // 0: discord_protos.discord_users.v1.FrecencyUserSettings.versions:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.Versions
	4,  // 1: discord_protos.discord_users.v1.FrecencyUserSettings.favorite_gifs:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFs
	5,  // 2: discord_protos.discord_users.v1.FrecencyUserSettings.favorite_stickers:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteStickers
	7,  // 3: discord_protos.discord_users.v1.FrecencyUserSettings.sticker_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecency
	8,  // 4: discord_protos.discord_users.v1.FrecencyUserSettings.favorite_emojis:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteEmojis
	9,  // 5: discord_protos.discord_users.v1.FrecencyUserSettings.emoji_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency
	10, // 6: discord_protos.discord_users.v1.FrecencyUserSettings.application_command_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecency
	11, // 7: discord_protos.discord_users.v1.FrecencyUserSettings.favorite_soundboard_sounds:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteSoundboardSounds
	12, // 8: discord_protos.discord_users.v1.FrecencyUserSettings.application_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecency
	13, // 9: discord_protos.discord_users.v1.FrecencyUserSettings.heard_sound_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecency
	14, // 10: discord_protos.discord_users.v1.FrecencyUserSettings.played_sound_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecency
	15, // 11: discord_protos.discord_users.v1.FrecencyUserSettings.guild_and_channel_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecency
	9,  // 12: discord_protos.discord_users.v1.FrecencyUserSettings.emoji_reaction_frecency:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency
	0,  // 13: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIF.format:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.GIFType
	16, // 14: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFs.gifs:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFs.GifsEntry
	17, // 15: discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecency.stickers:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecency.StickersEntry
	18, // 16: discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency.emojis:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency.EmojisEntry
	19, // 17: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecency.application_commands:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecency.ApplicationCommandsEntry
	20, // 18: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecency.applications:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecency.ApplicationsEntry
	21, // 19: discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecency.heard_sounds:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecency.HeardSoundsEntry
	22, // 20: discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecency.played_sounds:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecency.PlayedSoundsEntry
	23, // 21: discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecency.guild_and_channels:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecency.GuildAndChannelsEntry
	3,  // 22: discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIFs.GifsEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FavoriteGIF
	6,  // 23: discord_protos.discord_users.v1.FrecencyUserSettings.StickerFrecency.StickersEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	6,  // 24: discord_protos.discord_users.v1.FrecencyUserSettings.EmojiFrecency.EmojisEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	6,  // 25: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationCommandFrecency.ApplicationCommandsEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	6,  // 26: discord_protos.discord_users.v1.FrecencyUserSettings.ApplicationFrecency.ApplicationsEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	6,  // 27: discord_protos.discord_users.v1.FrecencyUserSettings.HeardSoundFrecency.HeardSoundsEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	6,  // 28: discord_protos.discord_users.v1.FrecencyUserSettings.PlayedSoundFrecency.PlayedSoundsEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	6,  // 29: discord_protos.discord_users.v1.FrecencyUserSettings.GuildAndChannelFrecency.GuildAndChannelsEntry.value:type_name -> discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyItem
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_protos_FrecencyUserSettings_proto_init() }
func file_protos_FrecencyUserSettings_proto_init() {
	if File_protos_FrecencyUserSettings_proto != nil {
		return
	}
	file_protos_FrecencyUserSettings_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_FrecencyUserSettings_proto_rawDesc), len(file_protos_FrecencyUserSettings_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_FrecencyUserSettings_proto_goTypes,
		DependencyIndexes: file_protos_FrecencyUserSettings_proto_depIdxs,
		EnumInfos:         file_protos_FrecencyUserSettings_proto_enumTypes,
		MessageInfos:      file_protos_FrecencyUserSettings_proto_msgTypes,
	}.Build()
	File_protos_FrecencyUserSettings_proto = out.File
	file_protos_FrecencyUserSettings_proto_goTypes = nil
	file_protos_FrecencyUserSettings_proto_depIdxs = nil
}
