// Code generated by 'yaegi extract github.com/lb-selfbot/discordgo'. DO NOT EDIT.

package discordgo

import (
	"go/constant"
	"go/token"
	"reflect"
)

var Symbols = map[string]map[string]reflect.Value{}

func init() {
	Symbols["github.com/lb-selfbot/discordgo/discordgo"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"APIVersion":                                                      reflect.ValueOf(&APIVersion).Elem(),
		"ActionsRowComponent":                                             reflect.ValueOf(ActionsRowComponent),
		"ActivityTypeCompeting":                                           reflect.ValueOf(ActivityTypeCompeting),
		"ActivityTypeCustom":                                              reflect.ValueOf(ActivityTypeCustom),
		"ActivityTypeGame":                                                reflect.ValueOf(ActivityTypeGame),
		"ActivityTypeListening":                                           reflect.ValueOf(ActivityTypeListening),
		"ActivityTypeStreaming":                                           reflect.ValueOf(ActivityTypeStreaming),
		"ActivityTypeWatching":                                            reflect.ValueOf(ActivityTypeWatching),
		"AllowedMentionTypeEveryone":                                      reflect.ValueOf(AllowedMentionTypeEveryone),
		"AllowedMentionTypeRoles":                                         reflect.ValueOf(AllowedMentionTypeRoles),
		"AllowedMentionTypeUsers":                                         reflect.ValueOf(AllowedMentionTypeUsers),
		"ApplicationCommandOptionAttachment":                              reflect.ValueOf(ApplicationCommandOptionAttachment),
		"ApplicationCommandOptionBoolean":                                 reflect.ValueOf(ApplicationCommandOptionBoolean),
		"ApplicationCommandOptionChannel":                                 reflect.ValueOf(ApplicationCommandOptionChannel),
		"ApplicationCommandOptionInteger":                                 reflect.ValueOf(ApplicationCommandOptionInteger),
		"ApplicationCommandOptionMentionable":                             reflect.ValueOf(ApplicationCommandOptionMentionable),
		"ApplicationCommandOptionNumber":                                  reflect.ValueOf(ApplicationCommandOptionNumber),
		"ApplicationCommandOptionRole":                                    reflect.ValueOf(ApplicationCommandOptionRole),
		"ApplicationCommandOptionString":                                  reflect.ValueOf(ApplicationCommandOptionString),
		"ApplicationCommandOptionSubCommand":                              reflect.ValueOf(ApplicationCommandOptionSubCommand),
		"ApplicationCommandOptionSubCommandGroup":                         reflect.ValueOf(ApplicationCommandOptionSubCommandGroup),
		"ApplicationCommandOptionUser":                                    reflect.ValueOf(ApplicationCommandOptionUser),
		"ApplicationCommandPermissionTypeChannel":                         reflect.ValueOf(ApplicationCommandPermissionTypeChannel),
		"ApplicationCommandPermissionTypeRole":                            reflect.ValueOf(ApplicationCommandPermissionTypeRole),
		"ApplicationCommandPermissionTypeUser":                            reflect.ValueOf(ApplicationCommandPermissionTypeUser),
		"ApplicationRoleConnectionMetadataBooleanEqual":                   reflect.ValueOf(ApplicationRoleConnectionMetadataBooleanEqual),
		"ApplicationRoleConnectionMetadataBooleanNotEqual":                reflect.ValueOf(ApplicationRoleConnectionMetadataBooleanNotEqual),
		"ApplicationRoleConnectionMetadataDatetimeGreaterThanOrEqual":     reflect.ValueOf(ApplicationRoleConnectionMetadataDatetimeGreaterThanOrEqual),
		"ApplicationRoleConnectionMetadataDatetimeLessThanOrEqual":        reflect.ValueOf(ApplicationRoleConnectionMetadataDatetimeLessThanOrEqual),
		"ApplicationRoleConnectionMetadataIntegerEqual":                   reflect.ValueOf(ApplicationRoleConnectionMetadataIntegerEqual),
		"ApplicationRoleConnectionMetadataIntegerGreaterThanOrEqual":      reflect.ValueOf(ApplicationRoleConnectionMetadataIntegerGreaterThanOrEqual),
		"ApplicationRoleConnectionMetadataIntegerLessThanOrEqual":         reflect.ValueOf(ApplicationRoleConnectionMetadataIntegerLessThanOrEqual),
		"ApplicationRoleConnectionMetadataIntegerNotEqual":                reflect.ValueOf(ApplicationRoleConnectionMetadataIntegerNotEqual),
		"AuditLogActionApplicationCommandPermissionUpdate":                reflect.ValueOf(AuditLogActionApplicationCommandPermissionUpdate),
		"AuditLogActionBotAdd":                                            reflect.ValueOf(AuditLogActionBotAdd),
		"AuditLogActionChannelCreate":                                     reflect.ValueOf(AuditLogActionChannelCreate),
		"AuditLogActionChannelDelete":                                     reflect.ValueOf(AuditLogActionChannelDelete),
		"AuditLogActionChannelOverwriteCreate":                            reflect.ValueOf(AuditLogActionChannelOverwriteCreate),
		"AuditLogActionChannelOverwriteDelete":                            reflect.ValueOf(AuditLogActionChannelOverwriteDelete),
		"AuditLogActionChannelOverwriteUpdate":                            reflect.ValueOf(AuditLogActionChannelOverwriteUpdate),
		"AuditLogActionChannelUpdate":                                     reflect.ValueOf(AuditLogActionChannelUpdate),
		"AuditLogActionEmojiCreate":                                       reflect.ValueOf(AuditLogActionEmojiCreate),
		"AuditLogActionEmojiDelete":                                       reflect.ValueOf(AuditLogActionEmojiDelete),
		"AuditLogActionEmojiUpdate":                                       reflect.ValueOf(AuditLogActionEmojiUpdate),
		"AuditLogActionGuildUpdate":                                       reflect.ValueOf(AuditLogActionGuildUpdate),
		"AuditLogActionIntegrationCreate":                                 reflect.ValueOf(AuditLogActionIntegrationCreate),
		"AuditLogActionIntegrationDelete":                                 reflect.ValueOf(AuditLogActionIntegrationDelete),
		"AuditLogActionIntegrationUpdate":                                 reflect.ValueOf(AuditLogActionIntegrationUpdate),
		"AuditLogActionInviteCreate":                                      reflect.ValueOf(AuditLogActionInviteCreate),
		"AuditLogActionInviteDelete":                                      reflect.ValueOf(AuditLogActionInviteDelete),
		"AuditLogActionInviteUpdate":                                      reflect.ValueOf(AuditLogActionInviteUpdate),
		"AuditLogActionMemberBanAdd":                                      reflect.ValueOf(AuditLogActionMemberBanAdd),
		"AuditLogActionMemberBanRemove":                                   reflect.ValueOf(AuditLogActionMemberBanRemove),
		"AuditLogActionMemberDisconnect":                                  reflect.ValueOf(AuditLogActionMemberDisconnect),
		"AuditLogActionMemberKick":                                        reflect.ValueOf(AuditLogActionMemberKick),
		"AuditLogActionMemberMove":                                        reflect.ValueOf(AuditLogActionMemberMove),
		"AuditLogActionMemberPrune":                                       reflect.ValueOf(AuditLogActionMemberPrune),
		"AuditLogActionMemberRoleUpdate":                                  reflect.ValueOf(AuditLogActionMemberRoleUpdate),
		"AuditLogActionMemberUpdate":                                      reflect.ValueOf(AuditLogActionMemberUpdate),
		"AuditLogActionMessageBulkDelete":                                 reflect.ValueOf(AuditLogActionMessageBulkDelete),
		"AuditLogActionMessageDelete":                                     reflect.ValueOf(AuditLogActionMessageDelete),
		"AuditLogActionMessagePin":                                        reflect.ValueOf(AuditLogActionMessagePin),
		"AuditLogActionMessageUnpin":                                      reflect.ValueOf(AuditLogActionMessageUnpin),
		"AuditLogActionRoleCreate":                                        reflect.ValueOf(AuditLogActionRoleCreate),
		"AuditLogActionRoleDelete":                                        reflect.ValueOf(AuditLogActionRoleDelete),
		"AuditLogActionRoleUpdate":                                        reflect.ValueOf(AuditLogActionRoleUpdate),
		"AuditLogActionStageInstanceCreate":                               reflect.ValueOf(AuditLogActionStageInstanceCreate),
		"AuditLogActionStageInstanceDelete":                               reflect.ValueOf(AuditLogActionStageInstanceDelete),
		"AuditLogActionStageInstanceUpdate":                               reflect.ValueOf(AuditLogActionStageInstanceUpdate),
		"AuditLogActionStickerCreate":                                     reflect.ValueOf(AuditLogActionStickerCreate),
		"AuditLogActionStickerDelete":                                     reflect.ValueOf(AuditLogActionStickerDelete),
		"AuditLogActionStickerUpdate":                                     reflect.ValueOf(AuditLogActionStickerUpdate),
		"AuditLogActionThreadCreate":                                      reflect.ValueOf(AuditLogActionThreadCreate),
		"AuditLogActionThreadDelete":                                      reflect.ValueOf(AuditLogActionThreadDelete),
		"AuditLogActionThreadUpdate":                                      reflect.ValueOf(AuditLogActionThreadUpdate),
		"AuditLogActionWebhookCreate":                                     reflect.ValueOf(AuditLogActionWebhookCreate),
		"AuditLogActionWebhookDelete":                                     reflect.ValueOf(AuditLogActionWebhookDelete),
		"AuditLogActionWebhookUpdate":                                     reflect.ValueOf(AuditLogActionWebhookUpdate),
		"AuditLogChangeKeyAfkChannelID":                                   reflect.ValueOf(AuditLogChangeKeyAfkChannelID),
		"AuditLogChangeKeyAfkTimeout":                                     reflect.ValueOf(AuditLogChangeKeyAfkTimeout),
		"AuditLogChangeKeyAllow":                                          reflect.ValueOf(AuditLogChangeKeyAllow),
		"AuditLogChangeKeyApplicationID":                                  reflect.ValueOf(AuditLogChangeKeyApplicationID),
		"AuditLogChangeKeyArchived":                                       reflect.ValueOf(AuditLogChangeKeyArchived),
		"AuditLogChangeKeyAsset":                                          reflect.ValueOf(AuditLogChangeKeyAsset),
		"AuditLogChangeKeyAutoArchiveDuration":                            reflect.ValueOf(AuditLogChangeKeyAutoArchiveDuration),
		"AuditLogChangeKeyAvailable":                                      reflect.ValueOf(AuditLogChangeKeyAvailable),
		"AuditLogChangeKeyAvatarHash":                                     reflect.ValueOf(AuditLogChangeKeyAvatarHash),
		"AuditLogChangeKeyBannerHash":                                     reflect.ValueOf(AuditLogChangeKeyBannerHash),
		"AuditLogChangeKeyBitrate":                                        reflect.ValueOf(AuditLogChangeKeyBitrate),
		"AuditLogChangeKeyChannelID":                                      reflect.ValueOf(AuditLogChangeKeyChannelID),
		"AuditLogChangeKeyCode":                                           reflect.ValueOf(AuditLogChangeKeyCode),
		"AuditLogChangeKeyColor":                                          reflect.ValueOf(AuditLogChangeKeyColor),
		"AuditLogChangeKeyCommunicationDisabledUntil":                     reflect.ValueOf(AuditLogChangeKeyCommunicationDisabledUntil),
		"AuditLogChangeKeyDeaf":                                           reflect.ValueOf(AuditLogChangeKeyDeaf),
		"AuditLogChangeKeyDefaultAutoArchiveDuration":                     reflect.ValueOf(AuditLogChangeKeyDefaultAutoArchiveDuration),
		"AuditLogChangeKeyDefaultMessageNotification":                     reflect.ValueOf(AuditLogChangeKeyDefaultMessageNotification),
		"AuditLogChangeKeyDeny":                                           reflect.ValueOf(AuditLogChangeKeyDeny),
		"AuditLogChangeKeyDescription":                                    reflect.ValueOf(AuditLogChangeKeyDescription),
		"AuditLogChangeKeyDiscoverySplashHash":                            reflect.ValueOf(AuditLogChangeKeyDiscoverySplashHash),
		"AuditLogChangeKeyEnableEmoticons":                                reflect.ValueOf(AuditLogChangeKeyEnableEmoticons),
		"AuditLogChangeKeyEntityType":                                     reflect.ValueOf(AuditLogChangeKeyEntityType),
		"AuditLogChangeKeyExpireBehavior":                                 reflect.ValueOf(AuditLogChangeKeyExpireBehavior),
		"AuditLogChangeKeyExpireGracePeriod":                              reflect.ValueOf(AuditLogChangeKeyExpireGracePeriod),
		"AuditLogChangeKeyExplicitContentFilter":                          reflect.ValueOf(AuditLogChangeKeyExplicitContentFilter),
		"AuditLogChangeKeyFormatType":                                     reflect.ValueOf(AuditLogChangeKeyFormatType),
		"AuditLogChangeKeyGuildID":                                        reflect.ValueOf(AuditLogChangeKeyGuildID),
		"AuditLogChangeKeyHoist":                                          reflect.ValueOf(AuditLogChangeKeyHoist),
		"AuditLogChangeKeyID":                                             reflect.ValueOf(AuditLogChangeKeyID),
		"AuditLogChangeKeyIconHash":                                       reflect.ValueOf(AuditLogChangeKeyIconHash),
		"AuditLogChangeKeyInvitable":                                      reflect.ValueOf(AuditLogChangeKeyInvitable),
		"AuditLogChangeKeyInviterID":                                      reflect.ValueOf(AuditLogChangeKeyInviterID),
		"AuditLogChangeKeyLocation":                                       reflect.ValueOf(AuditLogChangeKeyLocation),
		"AuditLogChangeKeyLocked":                                         reflect.ValueOf(AuditLogChangeKeyLocked),
		"AuditLogChangeKeyMaxAge":                                         reflect.ValueOf(AuditLogChangeKeyMaxAge),
		"AuditLogChangeKeyMaxUses":                                        reflect.ValueOf(AuditLogChangeKeyMaxUses),
		"AuditLogChangeKeyMentionable":                                    reflect.ValueOf(AuditLogChangeKeyMentionable),
		"AuditLogChangeKeyMfaLevel":                                       reflect.ValueOf(AuditLogChangeKeyMfaLevel),
		"AuditLogChangeKeyMute":                                           reflect.ValueOf(AuditLogChangeKeyMute),
		"AuditLogChangeKeyNSFW":                                           reflect.ValueOf(AuditLogChangeKeyNSFW),
		"AuditLogChangeKeyName":                                           reflect.ValueOf(AuditLogChangeKeyName),
		"AuditLogChangeKeyNick":                                           reflect.ValueOf(AuditLogChangeKeyNick),
		"AuditLogChangeKeyOwnerID":                                        reflect.ValueOf(AuditLogChangeKeyOwnerID),
		"AuditLogChangeKeyPermissionOverwrite":                            reflect.ValueOf(AuditLogChangeKeyPermissionOverwrite),
		"AuditLogChangeKeyPermissions":                                    reflect.ValueOf(AuditLogChangeKeyPermissions),
		"AuditLogChangeKeyPosition":                                       reflect.ValueOf(AuditLogChangeKeyPosition),
		"AuditLogChangeKeyPreferredLocale":                                reflect.ValueOf(AuditLogChangeKeyPreferredLocale),
		"AuditLogChangeKeyPrivacylevel":                                   reflect.ValueOf(AuditLogChangeKeyPrivacylevel),
		"AuditLogChangeKeyPruneDeleteDays":                                reflect.ValueOf(AuditLogChangeKeyPruneDeleteDays),
		"AuditLogChangeKeyPulibUpdatesChannelID":                          reflect.ValueOf(AuditLogChangeKeyPulibUpdatesChannelID),
		"AuditLogChangeKeyRateLimitPerUser":                               reflect.ValueOf(AuditLogChangeKeyRateLimitPerUser),
		"AuditLogChangeKeyRegion":                                         reflect.ValueOf(AuditLogChangeKeyRegion),
		"AuditLogChangeKeyRoleAdd":                                        reflect.ValueOf(AuditLogChangeKeyRoleAdd),
		"AuditLogChangeKeyRoleRemove":                                     reflect.ValueOf(AuditLogChangeKeyRoleRemove),
		"AuditLogChangeKeyRulesChannelID":                                 reflect.ValueOf(AuditLogChangeKeyRulesChannelID),
		"AuditLogChangeKeySplashHash":                                     reflect.ValueOf(AuditLogChangeKeySplashHash),
		"AuditLogChangeKeyStatus":                                         reflect.ValueOf(AuditLogChangeKeyStatus),
		"AuditLogChangeKeySystemChannelID":                                reflect.ValueOf(AuditLogChangeKeySystemChannelID),
		"AuditLogChangeKeyTags":                                           reflect.ValueOf(AuditLogChangeKeyTags),
		"AuditLogChangeKeyTempoary":                                       reflect.ValueOf(AuditLogChangeKeyTempoary),
		"AuditLogChangeKeyTemporary":                                      reflect.ValueOf(AuditLogChangeKeyTemporary),
		"AuditLogChangeKeyTopic":                                          reflect.ValueOf(AuditLogChangeKeyTopic),
		"AuditLogChangeKeyType":                                           reflect.ValueOf(AuditLogChangeKeyType),
		"AuditLogChangeKeyUnicodeEmoji":                                   reflect.ValueOf(AuditLogChangeKeyUnicodeEmoji),
		"AuditLogChangeKeyUserLimit":                                      reflect.ValueOf(AuditLogChangeKeyUserLimit),
		"AuditLogChangeKeyUses":                                           reflect.ValueOf(AuditLogChangeKeyUses),
		"AuditLogChangeKeyVanityURLCode":                                  reflect.ValueOf(AuditLogChangeKeyVanityURLCode),
		"AuditLogChangeKeyVerificationLevel":                              reflect.ValueOf(AuditLogChangeKeyVerificationLevel),
		"AuditLogChangeKeyWidgetChannelID":                                reflect.ValueOf(AuditLogChangeKeyWidgetChannelID),
		"AuditLogChangeKeyWidgetEnabled":                                  reflect.ValueOf(AuditLogChangeKeyWidgetEnabled),
		"AuditLogGuildScheduledEventCreate":                               reflect.ValueOf(AuditLogGuildScheduledEventCreate),
		"AuditLogGuildScheduledEventDelete":                               reflect.ValueOf(AuditLogGuildScheduledEventDelete),
		"AuditLogGuildScheduledEventUpdare":                               reflect.ValueOf(AuditLogGuildScheduledEventUpdare),
		"AuditLogOptionsTypeMember":                                       reflect.ValueOf(AuditLogOptionsTypeMember),
		"AuditLogOptionsTypeRole":                                         reflect.ValueOf(AuditLogOptionsTypeRole),
		"AutoModerationEventMessageSend":                                  reflect.ValueOf(AutoModerationEventMessageSend),
		"AutoModerationEventTriggerHarmfulLink":                           reflect.ValueOf(AutoModerationEventTriggerHarmfulLink),
		"AutoModerationEventTriggerKeyword":                               reflect.ValueOf(AutoModerationEventTriggerKeyword),
		"AutoModerationEventTriggerKeywordPreset":                         reflect.ValueOf(AutoModerationEventTriggerKeywordPreset),
		"AutoModerationEventTriggerSpam":                                  reflect.ValueOf(AutoModerationEventTriggerSpam),
		"AutoModerationKeywordPresetProfanity":                            reflect.ValueOf(AutoModerationKeywordPresetProfanity),
		"AutoModerationKeywordPresetSexualContent":                        reflect.ValueOf(AutoModerationKeywordPresetSexualContent),
		"AutoModerationKeywordPresetSlurs":                                reflect.ValueOf(AutoModerationKeywordPresetSlurs),
		"AutoModerationRuleActionBlockMessage":                            reflect.ValueOf(AutoModerationRuleActionBlockMessage),
		"AutoModerationRuleActionSendAlertMessage":                        reflect.ValueOf(AutoModerationRuleActionSendAlertMessage),
		"AutoModerationRuleActionTimeout":                                 reflect.ValueOf(AutoModerationRuleActionTimeout),
		"Bulgarian":                                                       reflect.ValueOf(Bulgarian),
		"ButtonComponent":                                                 reflect.ValueOf(ButtonComponent),
		"ChannelFlagPinned":                                               reflect.ValueOf(ChannelFlagPinned),
		"ChannelFlagRequireTag":                                           reflect.ValueOf(ChannelFlagRequireTag),
		"ChannelSelectMenu":                                               reflect.ValueOf(ChannelSelectMenu),
		"ChannelSelectMenuComponent":                                      reflect.ValueOf(ChannelSelectMenuComponent),
		"ChannelTypeDM":                                                   reflect.ValueOf(ChannelTypeDM),
		"ChannelTypeGroupDM":                                              reflect.ValueOf(ChannelTypeGroupDM),
		"ChannelTypeGuildCategory":                                        reflect.ValueOf(ChannelTypeGuildCategory),
		"ChannelTypeGuildForum":                                           reflect.ValueOf(ChannelTypeGuildForum),
		"ChannelTypeGuildNews":                                            reflect.ValueOf(ChannelTypeGuildNews),
		"ChannelTypeGuildNewsThread":                                      reflect.ValueOf(ChannelTypeGuildNewsThread),
		"ChannelTypeGuildPrivateThread":                                   reflect.ValueOf(ChannelTypeGuildPrivateThread),
		"ChannelTypeGuildPublicThread":                                    reflect.ValueOf(ChannelTypeGuildPublicThread),
		"ChannelTypeGuildStageVoice":                                      reflect.ValueOf(ChannelTypeGuildStageVoice),
		"ChannelTypeGuildStore":                                           reflect.ValueOf(ChannelTypeGuildStore),
		"ChannelTypeGuildText":                                            reflect.ValueOf(ChannelTypeGuildText),
		"ChannelTypeGuildVoice":                                           reflect.ValueOf(ChannelTypeGuildVoice),
		"ChatApplicationCommand":                                          reflect.ValueOf(ChatApplicationCommand),
		"ChineseCN":                                                       reflect.ValueOf(ChineseCN),
		"ChineseTW":                                                       reflect.ValueOf(ChineseTW),
		"Croatian":                                                        reflect.ValueOf(Croatian),
		"Czech":                                                           reflect.ValueOf(Czech),
		"DangerButton":                                                    reflect.ValueOf(DangerButton),
		"Danish":                                                          reflect.ValueOf(Danish),
		"Dutch":                                                           reflect.ValueOf(Dutch),
		"EmbedTypeArticle":                                                reflect.ValueOf(EmbedTypeArticle),
		"EmbedTypeGifv":                                                   reflect.ValueOf(EmbedTypeGifv),
		"EmbedTypeImage":                                                  reflect.ValueOf(EmbedTypeImage),
		"EmbedTypeLink":                                                   reflect.ValueOf(EmbedTypeLink),
		"EmbedTypeRich":                                                   reflect.ValueOf(EmbedTypeRich),
		"EmbedTypeVideo":                                                  reflect.ValueOf(EmbedTypeVideo),
		"EmojiRegex":                                                      reflect.ValueOf(&EmojiRegex).Elem(),
		"EndpointAPI":                                                     reflect.ValueOf(&EndpointAPI).Elem(),
		"EndpointApplication":                                             reflect.ValueOf(&EndpointApplication).Elem(),
		"EndpointApplicationCommandPermissions":                           reflect.ValueOf(&EndpointApplicationCommandPermissions).Elem(),
		"EndpointApplicationCommandsGuildPermissions":                     reflect.ValueOf(&EndpointApplicationCommandsGuildPermissions).Elem(),
		"EndpointApplicationGlobalCommand":                                reflect.ValueOf(&EndpointApplicationGlobalCommand).Elem(),
		"EndpointApplicationGlobalCommands":                               reflect.ValueOf(&EndpointApplicationGlobalCommands).Elem(),
		"EndpointApplicationGuildCommand":                                 reflect.ValueOf(&EndpointApplicationGuildCommand).Elem(),
		"EndpointApplicationGuildCommands":                                reflect.ValueOf(&EndpointApplicationGuildCommands).Elem(),
		"EndpointApplicationRoleConnectionMetadata":                       reflect.ValueOf(&EndpointApplicationRoleConnectionMetadata).Elem(),
		"EndpointApplications":                                            reflect.ValueOf(&EndpointApplications).Elem(),
		"EndpointAuth":                                                    reflect.ValueOf(&EndpointAuth).Elem(),
		"EndpointCDN":                                                     reflect.ValueOf(&EndpointCDN).Elem(),
		"EndpointCDNAttachments":                                          reflect.ValueOf(&EndpointCDNAttachments).Elem(),
		"EndpointCDNAvatars":                                              reflect.ValueOf(&EndpointCDNAvatars).Elem(),
		"EndpointCDNBanners":                                              reflect.ValueOf(&EndpointCDNBanners).Elem(),
		"EndpointCDNChannelIcons":                                         reflect.ValueOf(&EndpointCDNChannelIcons).Elem(),
		"EndpointCDNGuilds":                                               reflect.ValueOf(&EndpointCDNGuilds).Elem(),
		"EndpointCDNIcons":                                                reflect.ValueOf(&EndpointCDNIcons).Elem(),
		"EndpointCDNSplashes":                                             reflect.ValueOf(&EndpointCDNSplashes).Elem(),
		"EndpointChannel":                                                 reflect.ValueOf(&EndpointChannel).Elem(),
		"EndpointChannelActiveThreads":                                    reflect.ValueOf(&EndpointChannelActiveThreads).Elem(),
		"EndpointChannelApplicationCommands":                              reflect.ValueOf(&EndpointChannelApplicationCommands).Elem(),
		"EndpointChannelApplicationCommandsSearch":                        reflect.ValueOf(&EndpointChannelApplicationCommandsSearch).Elem(),
		"EndpointChannelFollow":                                           reflect.ValueOf(&EndpointChannelFollow).Elem(),
		"EndpointChannelInvites":                                          reflect.ValueOf(&EndpointChannelInvites).Elem(),
		"EndpointChannelJoinedPrivateArchivedThreads":                     reflect.ValueOf(&EndpointChannelJoinedPrivateArchivedThreads).Elem(),
		"EndpointChannelMessage":                                          reflect.ValueOf(&EndpointChannelMessage).Elem(),
		"EndpointChannelMessageCrosspost":                                 reflect.ValueOf(&EndpointChannelMessageCrosspost).Elem(),
		"EndpointChannelMessagePin":                                       reflect.ValueOf(&EndpointChannelMessagePin).Elem(),
		"EndpointChannelMessageThread":                                    reflect.ValueOf(&EndpointChannelMessageThread).Elem(),
		"EndpointChannelMessages":                                         reflect.ValueOf(&EndpointChannelMessages).Elem(),
		"EndpointChannelMessagesBulkDelete":                               reflect.ValueOf(&EndpointChannelMessagesBulkDelete).Elem(),
		"EndpointChannelMessagesPins":                                     reflect.ValueOf(&EndpointChannelMessagesPins).Elem(),
		"EndpointChannelPermission":                                       reflect.ValueOf(&EndpointChannelPermission).Elem(),
		"EndpointChannelPermissions":                                      reflect.ValueOf(&EndpointChannelPermissions).Elem(),
		"EndpointChannelPrivateArchivedThreads":                           reflect.ValueOf(&EndpointChannelPrivateArchivedThreads).Elem(),
		"EndpointChannelPublicArchivedThreads":                            reflect.ValueOf(&EndpointChannelPublicArchivedThreads).Elem(),
		"EndpointChannelRecipient":                                        reflect.ValueOf(&EndpointChannelRecipient).Elem(),
		"EndpointChannelThreads":                                          reflect.ValueOf(&EndpointChannelThreads).Elem(),
		"EndpointChannelTyping":                                           reflect.ValueOf(&EndpointChannelTyping).Elem(),
		"EndpointChannelWebhooks":                                         reflect.ValueOf(&EndpointChannelWebhooks).Elem(),
		"EndpointChannels":                                                reflect.ValueOf(&EndpointChannels).Elem(),
		"EndpointDefaultUserAvatar":                                       reflect.ValueOf(&EndpointDefaultUserAvatar).Elem(),
		"EndpointDiscord":                                                 reflect.ValueOf(&EndpointDiscord).Elem(),
		"EndpointEmoji":                                                   reflect.ValueOf(&EndpointEmoji).Elem(),
		"EndpointEmojiAnimated":                                           reflect.ValueOf(&EndpointEmojiAnimated).Elem(),
		"EndpointFollowupMessage":                                         reflect.ValueOf(&EndpointFollowupMessage).Elem(),
		"EndpointFollowupMessageActions":                                  reflect.ValueOf(&EndpointFollowupMessageActions).Elem(),
		"EndpointGateway":                                                 reflect.ValueOf(&EndpointGateway).Elem(),
		"EndpointGatewayBot":                                              reflect.ValueOf(&EndpointGatewayBot).Elem(),
		"EndpointGroupIcon":                                               reflect.ValueOf(&EndpointGroupIcon).Elem(),
		"EndpointGuild":                                                   reflect.ValueOf(&EndpointGuild).Elem(),
		"EndpointGuildAck":                                                reflect.ValueOf(&EndpointGuildAck).Elem(),
		"EndpointGuildActiveThreads":                                      reflect.ValueOf(&EndpointGuildActiveThreads).Elem(),
		"EndpointGuildApplicationCommandIndex":                            reflect.ValueOf(&EndpointGuildApplicationCommandIndex).Elem(),
		"EndpointGuildAuditLogs":                                          reflect.ValueOf(&EndpointGuildAuditLogs).Elem(),
		"EndpointGuildAutoModeration":                                     reflect.ValueOf(&EndpointGuildAutoModeration).Elem(),
		"EndpointGuildAutoModerationRule":                                 reflect.ValueOf(&EndpointGuildAutoModerationRule).Elem(),
		"EndpointGuildAutoModerationRules":                                reflect.ValueOf(&EndpointGuildAutoModerationRules).Elem(),
		"EndpointGuildBan":                                                reflect.ValueOf(&EndpointGuildBan).Elem(),
		"EndpointGuildBanner":                                             reflect.ValueOf(&EndpointGuildBanner).Elem(),
		"EndpointGuildBans":                                               reflect.ValueOf(&EndpointGuildBans).Elem(),
		"EndpointGuildChannels":                                           reflect.ValueOf(&EndpointGuildChannels).Elem(),
		"EndpointGuildCreate":                                             reflect.ValueOf(&EndpointGuildCreate).Elem(),
		"EndpointGuildEmbed":                                              reflect.ValueOf(&EndpointGuildEmbed).Elem(),
		"EndpointGuildEmoji":                                              reflect.ValueOf(&EndpointGuildEmoji).Elem(),
		"EndpointGuildEmojis":                                             reflect.ValueOf(&EndpointGuildEmojis).Elem(),
		"EndpointGuildIcon":                                               reflect.ValueOf(&EndpointGuildIcon).Elem(),
		"EndpointGuildIconAnimated":                                       reflect.ValueOf(&EndpointGuildIconAnimated).Elem(),
		"EndpointGuildIntegration":                                        reflect.ValueOf(&EndpointGuildIntegration).Elem(),
		"EndpointGuildIntegrations":                                       reflect.ValueOf(&EndpointGuildIntegrations).Elem(),
		"EndpointGuildInvites":                                            reflect.ValueOf(&EndpointGuildInvites).Elem(),
		"EndpointGuildMember":                                             reflect.ValueOf(&EndpointGuildMember).Elem(),
		"EndpointGuildMemberAvatar":                                       reflect.ValueOf(&EndpointGuildMemberAvatar).Elem(),
		"EndpointGuildMemberAvatarAnimated":                               reflect.ValueOf(&EndpointGuildMemberAvatarAnimated).Elem(),
		"EndpointGuildMemberRole":                                         reflect.ValueOf(&EndpointGuildMemberRole).Elem(),
		"EndpointGuildMembers":                                            reflect.ValueOf(&EndpointGuildMembers).Elem(),
		"EndpointGuildMembersSearch":                                      reflect.ValueOf(&EndpointGuildMembersSearch).Elem(),
		"EndpointGuildPreview":                                            reflect.ValueOf(&EndpointGuildPreview).Elem(),
		"EndpointGuildPrune":                                              reflect.ValueOf(&EndpointGuildPrune).Elem(),
		"EndpointGuildRole":                                               reflect.ValueOf(&EndpointGuildRole).Elem(),
		"EndpointGuildRoles":                                              reflect.ValueOf(&EndpointGuildRoles).Elem(),
		"EndpointGuildScheduledEvent":                                     reflect.ValueOf(&EndpointGuildScheduledEvent).Elem(),
		"EndpointGuildScheduledEventUsers":                                reflect.ValueOf(&EndpointGuildScheduledEventUsers).Elem(),
		"EndpointGuildScheduledEvents":                                    reflect.ValueOf(&EndpointGuildScheduledEvents).Elem(),
		"EndpointGuildSplash":                                             reflect.ValueOf(&EndpointGuildSplash).Elem(),
		"EndpointGuildSticker":                                            reflect.ValueOf(&EndpointGuildSticker).Elem(),
		"EndpointGuildStickers":                                           reflect.ValueOf(&EndpointGuildStickers).Elem(),
		"EndpointGuildTemplate":                                           reflect.ValueOf(&EndpointGuildTemplate).Elem(),
		"EndpointGuildTemplateSync":                                       reflect.ValueOf(&EndpointGuildTemplateSync).Elem(),
		"EndpointGuildTemplates":                                          reflect.ValueOf(&EndpointGuildTemplates).Elem(),
		"EndpointGuildThreads":                                            reflect.ValueOf(&EndpointGuildThreads).Elem(),
		"EndpointGuildWebhooks":                                           reflect.ValueOf(&EndpointGuildWebhooks).Elem(),
		"EndpointGuildWidget":                                             reflect.ValueOf(&EndpointGuildWidget).Elem(),
		"EndpointGuilds":                                                  reflect.ValueOf(&EndpointGuilds).Elem(),
		"EndpointInteraction":                                             reflect.ValueOf(&EndpointInteraction).Elem(),
		"EndpointInteractionResponse":                                     reflect.ValueOf(&EndpointInteractionResponse).Elem(),
		"EndpointInteractionResponseActions":                              reflect.ValueOf(&EndpointInteractionResponseActions).Elem(),
		"EndpointInteractions":                                            reflect.ValueOf(&EndpointInteractions).Elem(),
		"EndpointInvite":                                                  reflect.ValueOf(&EndpointInvite).Elem(),
		"EndpointMessageAck":                                              reflect.ValueOf(&EndpointMessageAck).Elem(),
		"EndpointMessageReaction":                                         reflect.ValueOf(&EndpointMessageReaction).Elem(),
		"EndpointMessageReactions":                                        reflect.ValueOf(&EndpointMessageReactions).Elem(),
		"EndpointMessageReactionsAll":                                     reflect.ValueOf(&EndpointMessageReactionsAll).Elem(),
		"EndpointNitroStickersPacks":                                      reflect.ValueOf(&EndpointNitroStickersPacks).Elem(),
		"EndpointOAuth2":                                                  reflect.ValueOf(&EndpointOAuth2).Elem(),
		"EndpointOAuth2Application":                                       reflect.ValueOf(&EndpointOAuth2Application).Elem(),
		"EndpointOAuth2ApplicationAssets":                                 reflect.ValueOf(&EndpointOAuth2ApplicationAssets).Elem(),
		"EndpointOAuth2Applications":                                      reflect.ValueOf(&EndpointOAuth2Applications).Elem(),
		"EndpointOAuth2ApplicationsBot":                                   reflect.ValueOf(&EndpointOAuth2ApplicationsBot).Elem(),
		"EndpointOauth2":                                                  reflect.ValueOf(&EndpointOauth2).Elem(),
		"EndpointOauth2Application":                                       reflect.ValueOf(&EndpointOauth2Application).Elem(),
		"EndpointOauth2ApplicationAssets":                                 reflect.ValueOf(&EndpointOauth2ApplicationAssets).Elem(),
		"EndpointOauth2Applications":                                      reflect.ValueOf(&EndpointOauth2Applications).Elem(),
		"EndpointOauth2ApplicationsBot":                                   reflect.ValueOf(&EndpointOauth2ApplicationsBot).Elem(),
		"EndpointSessions":                                                reflect.ValueOf(&EndpointSessions).Elem(),
		"EndpointSm":                                                      reflect.ValueOf(&EndpointSm).Elem(),
		"EndpointSmActive":                                                reflect.ValueOf(&EndpointSmActive).Elem(),
		"EndpointSmUpcoming":                                              reflect.ValueOf(&EndpointSmUpcoming).Elem(),
		"EndpointStageInstance":                                           reflect.ValueOf(&EndpointStageInstance).Elem(),
		"EndpointStageInstances":                                          reflect.ValueOf(&EndpointStageInstances).Elem(),
		"EndpointStatus":                                                  reflect.ValueOf(&EndpointStatus).Elem(),
		"EndpointSticker":                                                 reflect.ValueOf(&EndpointSticker).Elem(),
		"EndpointStickers":                                                reflect.ValueOf(&EndpointStickers).Elem(),
		"EndpointThreadMember":                                            reflect.ValueOf(&EndpointThreadMember).Elem(),
		"EndpointThreadMembers":                                           reflect.ValueOf(&EndpointThreadMembers).Elem(),
		"EndpointUser":                                                    reflect.ValueOf(&EndpointUser).Elem(),
		"EndpointUserApplicationRoleConnection":                           reflect.ValueOf(&EndpointUserApplicationRoleConnection).Elem(),
		"EndpointUserAvatar":                                              reflect.ValueOf(&EndpointUserAvatar).Elem(),
		"EndpointUserAvatarAnimated":                                      reflect.ValueOf(&EndpointUserAvatarAnimated).Elem(),
		"EndpointUserBanner":                                              reflect.ValueOf(&EndpointUserBanner).Elem(),
		"EndpointUserBannerAnimated":                                      reflect.ValueOf(&EndpointUserBannerAnimated).Elem(),
		"EndpointUserChannels":                                            reflect.ValueOf(&EndpointUserChannels).Elem(),
		"EndpointUserConnections":                                         reflect.ValueOf(&EndpointUserConnections).Elem(),
		"EndpointUserGuild":                                               reflect.ValueOf(&EndpointUserGuild).Elem(),
		"EndpointUserGuildMember":                                         reflect.ValueOf(&EndpointUserGuildMember).Elem(),
		"EndpointUserGuilds":                                              reflect.ValueOf(&EndpointUserGuilds).Elem(),
		"EndpointUserInvites":                                             reflect.ValueOf(&EndpointUserInvites).Elem(),
		"EndpointUserProfile":                                             reflect.ValueOf(&EndpointUserProfile).Elem(),
		"EndpointUserRelationship":                                        reflect.ValueOf(&EndpointUserRelationship).Elem(),
		"EndpointUserRelationships":                                       reflect.ValueOf(&EndpointUserRelationships).Elem(),
		"EndpointUsers":                                                   reflect.ValueOf(&EndpointUsers).Elem(),
		"EndpointVoice":                                                   reflect.ValueOf(&EndpointVoice).Elem(),
		"EndpointVoiceRegions":                                            reflect.ValueOf(&EndpointVoiceRegions).Elem(),
		"EndpointWebhook":                                                 reflect.ValueOf(&EndpointWebhook).Elem(),
		"EndpointWebhookMessage":                                          reflect.ValueOf(&EndpointWebhookMessage).Elem(),
		"EndpointWebhookToken":                                            reflect.ValueOf(&EndpointWebhookToken).Elem(),
		"EndpointWebhooks":                                                reflect.ValueOf(&EndpointWebhooks).Elem(),
		"EnglishGB":                                                       reflect.ValueOf(EnglishGB),
		"EnglishUS":                                                       reflect.ValueOf(EnglishUS),
		"ErrCodeAPIResourceIsCurrentlyOverloaded":                         reflect.ValueOf(constant.MakeFromLiteral("130000", token.INT, 0)),
		"ErrCodeActionRequiredVerifiedAccount":                            reflect.ValueOf(constant.MakeFromLiteral("40002", token.INT, 0)),
		"ErrCodeAnApplicationWithThatNameAlreadyExists":                   reflect.ValueOf(constant.MakeFromLiteral("40041", token.INT, 0)),
		"ErrCodeBeforeValueIsEarlierThanThreadCreationDate":               reflect.ValueOf(constant.MakeFromLiteral("50085", token.INT, 0)),
		"ErrCodeBotsCannotUseEndpoint":                                    reflect.ValueOf(constant.MakeFromLiteral("20001", token.INT, 0)),
		"ErrCodeCanOnlyPinMessageToOriginatingChannel":                    reflect.ValueOf(constant.MakeFromLiteral("50019", token.INT, 0)),
		"ErrCodeCannotDeleteAChannelRequiredForCommunityGuilds":           reflect.ValueOf(constant.MakeFromLiteral("50074", token.INT, 0)),
		"ErrCodeCannotEditFromAnotherUser":                                reflect.ValueOf(constant.MakeFromLiteral("50005", token.INT, 0)),
		"ErrCodeCannotExecuteActionOnDMChannel":                           reflect.ValueOf(constant.MakeFromLiteral("50003", token.INT, 0)),
		"ErrCodeCannotExecuteActionOnSystemMessage":                       reflect.ValueOf(constant.MakeFromLiteral("50021", token.INT, 0)),
		"ErrCodeCannotExecuteActionOnThisChannelType":                     reflect.ValueOf(constant.MakeFromLiteral("50024", token.INT, 0)),
		"ErrCodeCannotReplyWithoutPermissionToReadMessageHistory":         reflect.ValueOf(constant.MakeFromLiteral("160002", token.INT, 0)),
		"ErrCodeCannotSendEmptyMessage":                                   reflect.ValueOf(constant.MakeFromLiteral("50006", token.INT, 0)),
		"ErrCodeCannotSendMessagesInVoiceChannel":                         reflect.ValueOf(constant.MakeFromLiteral("50008", token.INT, 0)),
		"ErrCodeCannotSendMessagesToThisUser":                             reflect.ValueOf(constant.MakeFromLiteral("50007", token.INT, 0)),
		"ErrCodeCannotUpdateAFinishedEvent":                               reflect.ValueOf(constant.MakeFromLiteral("180000", token.INT, 0)),
		"ErrCodeChannelHasHitWriteRateLimit":                              reflect.ValueOf(constant.MakeFromLiteral("20028", token.INT, 0)),
		"ErrCodeChannelVerificationLevelTooHigh":                          reflect.ValueOf(constant.MakeFromLiteral("50009", token.INT, 0)),
		"ErrCodeCommunityServerChannelsMustBeTextChannels":                reflect.ValueOf(constant.MakeFromLiteral("50086", token.INT, 0)),
		"ErrCodeEmbedDisabled":                                            reflect.ValueOf(constant.MakeFromLiteral("50004", token.INT, 0)),
		"ErrCodeExplicitContentCannotBeSentToTheDesiredRecipients":        reflect.ValueOf(constant.MakeFromLiteral("20009", token.INT, 0)),
		"ErrCodeFailedToCreateStageNeededForStageEvent":                   reflect.ValueOf(constant.MakeFromLiteral("180002", token.INT, 0)),
		"ErrCodeFeatureTemporarilyDisabledServerSide":                     reflect.ValueOf(constant.MakeFromLiteral("40006", token.INT, 0)),
		"ErrCodeFileUploadedExceedsTheMaximumSize":                        reflect.ValueOf(constant.MakeFromLiteral("50045", token.INT, 0)),
		"ErrCodeGeneralError":                                             reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ErrCodeGuildAlreadyHasATemplate":                                 reflect.ValueOf(constant.MakeFromLiteral("30031", token.INT, 0)),
		"ErrCodeGuildPremiumSubscriptionLevelTooLow":                      reflect.ValueOf(constant.MakeFromLiteral("20035", token.INT, 0)),
		"ErrCodeGuildWidgetDisabled":                                      reflect.ValueOf(constant.MakeFromLiteral("50004", token.INT, 0)),
		"ErrCodeInteractionHasAlreadyBeenAcknowledged":                    reflect.ValueOf(constant.MakeFromLiteral("40060", token.INT, 0)),
		"ErrCodeInvalidAPIVersionProvided":                                reflect.ValueOf(constant.MakeFromLiteral("50041", token.INT, 0)),
		"ErrCodeInvalidAccountType":                                       reflect.ValueOf(constant.MakeFromLiteral("50002", token.INT, 0)),
		"ErrCodeInvalidAuthenticationToken":                               reflect.ValueOf(constant.MakeFromLiteral("50014", token.INT, 0)),
		"ErrCodeInvalidFileUploaded":                                      reflect.ValueOf(constant.MakeFromLiteral("50046", token.INT, 0)),
		"ErrCodeInvalidFormBody":                                          reflect.ValueOf(constant.MakeFromLiteral("50035", token.INT, 0)),
		"ErrCodeInvalidGuild":                                             reflect.ValueOf(constant.MakeFromLiteral("50055", token.INT, 0)),
		"ErrCodeInvalidJSONForUploadedLottieFile":                         reflect.ValueOf(constant.MakeFromLiteral("170001", token.INT, 0)),
		"ErrCodeInvalidMessageType":                                       reflect.ValueOf(constant.MakeFromLiteral("50068", token.INT, 0)),
		"ErrCodeInvalidOAuth2AccessTokenProvided":                         reflect.ValueOf(constant.MakeFromLiteral("50025", token.INT, 0)),
		"ErrCodeInvalidOAuthState":                                        reflect.ValueOf(constant.MakeFromLiteral("50012", token.INT, 0)),
		"ErrCodeInvalidRecipients":                                        reflect.ValueOf(constant.MakeFromLiteral("50033", token.INT, 0)),
		"ErrCodeInvalidRole":                                              reflect.ValueOf(constant.MakeFromLiteral("50028", token.INT, 0)),
		"ErrCodeInvalidStickerSent":                                       reflect.ValueOf(constant.MakeFromLiteral("50081", token.INT, 0)),
		"ErrCodeInvalidWebhookTokenProvided":                              reflect.ValueOf(constant.MakeFromLiteral("50027", token.INT, 0)),
		"ErrCodeInviteAcceptedToGuildApplicationsBotNotIn":                reflect.ValueOf(constant.MakeFromLiteral("50036", token.INT, 0)),
		"ErrCodeInviteCodeWasEitherInvalidOrTaken":                        reflect.ValueOf(constant.MakeFromLiteral("50020", token.INT, 0)),
		"ErrCodeLottieAnimationMaximumDimensionsExceeded":                 reflect.ValueOf(constant.MakeFromLiteral("170005", token.INT, 0)),
		"ErrCodeMaximumGuildRolesReached":                                 reflect.ValueOf(constant.MakeFromLiteral("30005", token.INT, 0)),
		"ErrCodeMaximumGuildsReached":                                     reflect.ValueOf(constant.MakeFromLiteral("30001", token.INT, 0)),
		"ErrCodeMaximumNumberOfActiveAnnouncementThreadsReached":          reflect.ValueOf(constant.MakeFromLiteral("160007", token.INT, 0)),
		"ErrCodeMaximumNumberOfActiveThreadsReached":                      reflect.ValueOf(constant.MakeFromLiteral("160006", token.INT, 0)),
		"ErrCodeMaximumNumberOfAnimatedEmojisReached":                     reflect.ValueOf(constant.MakeFromLiteral("30018", token.INT, 0)),
		"ErrCodeMaximumNumberOfAttachmentsInAMessageReached":              reflect.ValueOf(constant.MakeFromLiteral("30015", token.INT, 0)),
		"ErrCodeMaximumNumberOfBansFetchesHasBeenReached":                 reflect.ValueOf(constant.MakeFromLiteral("30037", token.INT, 0)),
		"ErrCodeMaximumNumberOfBansForNonGuildMembersHaveBeenExceeded":    reflect.ValueOf(constant.MakeFromLiteral("30035", token.INT, 0)),
		"ErrCodeMaximumNumberOfEditsToMessagesOlderThanOneHourReached":    reflect.ValueOf(constant.MakeFromLiteral("30046", token.INT, 0)),
		"ErrCodeMaximumNumberOfEmojisReached":                             reflect.ValueOf(constant.MakeFromLiteral("30008", token.INT, 0)),
		"ErrCodeMaximumNumberOfGuildChannelsReached":                      reflect.ValueOf(constant.MakeFromLiteral("30013", token.INT, 0)),
		"ErrCodeMaximumNumberOfGuildDiscoverySubcategoriesReached":        reflect.ValueOf(constant.MakeFromLiteral("30030", token.INT, 0)),
		"ErrCodeMaximumNumberOfGuildWidgetSettingsUpdatesHasBeenReached":  reflect.ValueOf(constant.MakeFromLiteral("30042", token.INT, 0)),
		"ErrCodeMaximumNumberOfInvitesReached":                            reflect.ValueOf(constant.MakeFromLiteral("30016", token.INT, 0)),
		"ErrCodeMaximumNumberOfPinnedThreadsInForumChannelHasBeenReached": reflect.ValueOf(constant.MakeFromLiteral("30047", token.INT, 0)),
		"ErrCodeMaximumNumberOfPruneRequestsHasBeenReached":               reflect.ValueOf(constant.MakeFromLiteral("30040", token.INT, 0)),
		"ErrCodeMaximumNumberOfRecipientsReached":                         reflect.ValueOf(constant.MakeFromLiteral("30004", token.INT, 0)),
		"ErrCodeMaximumNumberOfServerMembersReached":                      reflect.ValueOf(constant.MakeFromLiteral("30019", token.INT, 0)),
		"ErrCodeMaximumNumberOfStickersReached":                           reflect.ValueOf(constant.MakeFromLiteral("30039", token.INT, 0)),
		"ErrCodeMaximumNumberOfTagsInForumChannelHasBeenReached":          reflect.ValueOf(constant.MakeFromLiteral("30048", token.INT, 0)),
		"ErrCodeMaximumNumberOfThreadParticipantsReached":                 reflect.ValueOf(constant.MakeFromLiteral("30033", token.INT, 0)),
		"ErrCodeMaximumNumberOfUncompletedGuildScheduledEventsReached":    reflect.ValueOf(constant.MakeFromLiteral("30038", token.INT, 0)),
		"ErrCodeMaximumNumberOfWebhooksReached":                           reflect.ValueOf(constant.MakeFromLiteral("30007", token.INT, 0)),
		"ErrCodeMaximumPinsReached":                                       reflect.ValueOf(constant.MakeFromLiteral("30003", token.INT, 0)),
		"ErrCodeMessageAlreadyCrossposted":                                reflect.ValueOf(constant.MakeFromLiteral("40033", token.INT, 0)),
		"ErrCodeMessageCannotBeEditedDueToAnnouncementRateLimits":         reflect.ValueOf(constant.MakeFromLiteral("20022", token.INT, 0)),
		"ErrCodeMessageProvidedTooOldForBulkDelete":                       reflect.ValueOf(constant.MakeFromLiteral("50034", token.INT, 0)),
		"ErrCodeMissingAccess":                                            reflect.ValueOf(constant.MakeFromLiteral("50001", token.INT, 0)),
		"ErrCodeMissingPermissions":                                       reflect.ValueOf(constant.MakeFromLiteral("50013", token.INT, 0)),
		"ErrCodeMissingRequiredOAuth2Scope":                               reflect.ValueOf(constant.MakeFromLiteral("50026", token.INT, 0)),
		"ErrCodeNoUsersWithDiscordTagExist":                               reflect.ValueOf(constant.MakeFromLiteral("80004", token.INT, 0)),
		"ErrCodeOAuth2ApplicationDoesNotHaveBot":                          reflect.ValueOf(constant.MakeFromLiteral("50010", token.INT, 0)),
		"ErrCodeOAuth2ApplicationLimitReached":                            reflect.ValueOf(constant.MakeFromLiteral("50011", token.INT, 0)),
		"ErrCodeOnlyBotsCanUseEndpoint":                                   reflect.ValueOf(constant.MakeFromLiteral("20002", token.INT, 0)),
		"ErrCodeOnlyTheOwnerOfThisAccountCanPerformThisAction":            reflect.ValueOf(constant.MakeFromLiteral("20018", token.INT, 0)),
		"ErrCodeOpeningDirectMessagesTooFast":                             reflect.ValueOf(constant.MakeFromLiteral("40003", token.INT, 0)),
		"ErrCodePerformedOperationOnArchivedThread":                       reflect.ValueOf(constant.MakeFromLiteral("50083", token.INT, 0)),
		"ErrCodeReactionBlocked":                                          reflect.ValueOf(constant.MakeFromLiteral("90001", token.INT, 0)),
		"ErrCodeRequestEntityTooLarge":                                    reflect.ValueOf(constant.MakeFromLiteral("40005", token.INT, 0)),
		"ErrCodeSendMessagesHasBeenTemporarilyDisabled":                   reflect.ValueOf(constant.MakeFromLiteral("40004", token.INT, 0)),
		"ErrCodeStageTopicContainsNotAllowedWordsForPublicStages":         reflect.ValueOf(constant.MakeFromLiteral("20031", token.INT, 0)),
		"ErrCodeStickerAnimationDurationExceedsMaximumOfFiveSeconds":      reflect.ValueOf(constant.MakeFromLiteral("170007", token.INT, 0)),
		"ErrCodeStickerFrameCountExceedsMaximumOfOneThousandFrames":       reflect.ValueOf(constant.MakeFromLiteral("170004", token.INT, 0)),
		"ErrCodeStickerFrameRateOutOfRange":                               reflect.ValueOf(constant.MakeFromLiteral("170006", token.INT, 0)),
		"ErrCodeStickerMaximumFramerateExceeded":                          reflect.ValueOf(constant.MakeFromLiteral("170003", token.INT, 0)),
		"ErrCodeTagNamesMustBeUnique":                                     reflect.ValueOf(constant.MakeFromLiteral("40061", token.INT, 0)),
		"ErrCodeTargetIsNotConnectedToVoice":                              reflect.ValueOf(constant.MakeFromLiteral("40032", token.INT, 0)),
		"ErrCodeTheRequestBodyContainsInvalidJSON":                        reflect.ValueOf(constant.MakeFromLiteral("50109", token.INT, 0)),
		"ErrCodeTheStageIsAlreadyOpen":                                    reflect.ValueOf(constant.MakeFromLiteral("150006", token.INT, 0)),
		"ErrCodeTheWriteActionYouArePerformingOnTheServerHasHitTheWriteRateLimit": reflect.ValueOf(constant.MakeFromLiteral("20029", token.INT, 0)),
		"ErrCodeThisActionCannotBePerformedDueToSlowmodeRateLimit":                reflect.ValueOf(constant.MakeFromLiteral("20016", token.INT, 0)),
		"ErrCodeThisServerIsNotAvailableInYourLocation":                           reflect.ValueOf(constant.MakeFromLiteral("50095", token.INT, 0)),
		"ErrCodeThisServerNeedsMonetizationEnabledInOrderToPerformThisAction":     reflect.ValueOf(constant.MakeFromLiteral("50097", token.INT, 0)),
		"ErrCodeThisServerNeedsMoreBoostsToPerformThisAction":                     reflect.ValueOf(constant.MakeFromLiteral("50101", token.INT, 0)),
		"ErrCodeThreadAlreadyCreatedForThisMessage":                               reflect.ValueOf(constant.MakeFromLiteral("160004", token.INT, 0)),
		"ErrCodeThreadIsLocked":                                                   reflect.ValueOf(constant.MakeFromLiteral("160005", token.INT, 0)),
		"ErrCodeTooFewOrTooManyMessagesToDelete":                                  reflect.ValueOf(constant.MakeFromLiteral("50016", token.INT, 0)),
		"ErrCodeTooManyReactions":                                                 reflect.ValueOf(constant.MakeFromLiteral("30010", token.INT, 0)),
		"ErrCodeUnauthorized":                                                     reflect.ValueOf(constant.MakeFromLiteral("40001", token.INT, 0)),
		"ErrCodeUnknownAccount":                                                   reflect.ValueOf(constant.MakeFromLiteral("10001", token.INT, 0)),
		"ErrCodeUnknownApplication":                                               reflect.ValueOf(constant.MakeFromLiteral("10002", token.INT, 0)),
		"ErrCodeUnknownApplicationCommand":                                        reflect.ValueOf(constant.MakeFromLiteral("10063", token.INT, 0)),
		"ErrCodeUnknownApplicationCommandPermissions":                             reflect.ValueOf(constant.MakeFromLiteral("10066", token.INT, 0)),
		"ErrCodeUnknownBan":                                                       reflect.ValueOf(constant.MakeFromLiteral("10026", token.INT, 0)),
		"ErrCodeUnknownBranch":                                                    reflect.ValueOf(constant.MakeFromLiteral("10032", token.INT, 0)),
		"ErrCodeUnknownBuild":                                                     reflect.ValueOf(constant.MakeFromLiteral("10030", token.INT, 0)),
		"ErrCodeUnknownChannel":                                                   reflect.ValueOf(constant.MakeFromLiteral("10003", token.INT, 0)),
		"ErrCodeUnknownDiscoveryCategory":                                         reflect.ValueOf(constant.MakeFromLiteral("10059", token.INT, 0)),
		"ErrCodeUnknownEmoji":                                                     reflect.ValueOf(constant.MakeFromLiteral("10014", token.INT, 0)),
		"ErrCodeUnknownEntitlement":                                               reflect.ValueOf(constant.MakeFromLiteral("10029", token.INT, 0)),
		"ErrCodeUnknownGiftCode":                                                  reflect.ValueOf(constant.MakeFromLiteral("10038", token.INT, 0)),
		"ErrCodeUnknownGuild":                                                     reflect.ValueOf(constant.MakeFromLiteral("10004", token.INT, 0)),
		"ErrCodeUnknownGuildMemberVerificationForm":                               reflect.ValueOf(constant.MakeFromLiteral("10068", token.INT, 0)),
		"ErrCodeUnknownGuildScheduledEvent":                                       reflect.ValueOf(constant.MakeFromLiteral("10070", token.INT, 0)),
		"ErrCodeUnknownGuildScheduledEventUser":                                   reflect.ValueOf(constant.MakeFromLiteral("10071", token.INT, 0)),
		"ErrCodeUnknownGuildTemplate":                                             reflect.ValueOf(constant.MakeFromLiteral("10057", token.INT, 0)),
		"ErrCodeUnknownGuildWelcomeScreen":                                        reflect.ValueOf(constant.MakeFromLiteral("10069", token.INT, 0)),
		"ErrCodeUnknownIntegration":                                               reflect.ValueOf(constant.MakeFromLiteral("10005", token.INT, 0)),
		"ErrCodeUnknownInteraction":                                               reflect.ValueOf(constant.MakeFromLiteral("10062", token.INT, 0)),
		"ErrCodeUnknownInvite":                                                    reflect.ValueOf(constant.MakeFromLiteral("10006", token.INT, 0)),
		"ErrCodeUnknownLobby":                                                     reflect.ValueOf(constant.MakeFromLiteral("10031", token.INT, 0)),
		"ErrCodeUnknownMember":                                                    reflect.ValueOf(constant.MakeFromLiteral("10007", token.INT, 0)),
		"ErrCodeUnknownMessage":                                                   reflect.ValueOf(constant.MakeFromLiteral("10008", token.INT, 0)),
		"ErrCodeUnknownOverwrite":                                                 reflect.ValueOf(constant.MakeFromLiteral("10009", token.INT, 0)),
		"ErrCodeUnknownPremiumServerSubscribeCooldown":                            reflect.ValueOf(constant.MakeFromLiteral("10050", token.INT, 0)),
		"ErrCodeUnknownProvider":                                                  reflect.ValueOf(constant.MakeFromLiteral("10010", token.INT, 0)),
		"ErrCodeUnknownRedistributable":                                           reflect.ValueOf(constant.MakeFromLiteral("10036", token.INT, 0)),
		"ErrCodeUnknownRole":                                                      reflect.ValueOf(constant.MakeFromLiteral("10011", token.INT, 0)),
		"ErrCodeUnknownSKU":                                                       reflect.ValueOf(constant.MakeFromLiteral("10027", token.INT, 0)),
		"ErrCodeUnknownSession":                                                   reflect.ValueOf(constant.MakeFromLiteral("10020", token.INT, 0)),
		"ErrCodeUnknownStageInstance":                                             reflect.ValueOf(constant.MakeFromLiteral("10067", token.INT, 0)),
		"ErrCodeUnknownSticker":                                                   reflect.ValueOf(constant.MakeFromLiteral("10060", token.INT, 0)),
		"ErrCodeUnknownStoreDirectoryLayout":                                      reflect.ValueOf(constant.MakeFromLiteral("10033", token.INT, 0)),
		"ErrCodeUnknownStoreListing":                                              reflect.ValueOf(constant.MakeFromLiteral("10028", token.INT, 0)),
		"ErrCodeUnknownStream":                                                    reflect.ValueOf(constant.MakeFromLiteral("10049", token.INT, 0)),
		"ErrCodeUnknownToken":                                                     reflect.ValueOf(constant.MakeFromLiteral("10012", token.INT, 0)),
		"ErrCodeUnknownUser":                                                      reflect.ValueOf(constant.MakeFromLiteral("10013", token.INT, 0)),
		"ErrCodeUnknownWebhook":                                                   reflect.ValueOf(constant.MakeFromLiteral("10015", token.INT, 0)),
		"ErrCodeUnknownWebhookService":                                            reflect.ValueOf(constant.MakeFromLiteral("10016", token.INT, 0)),
		"ErrCodeUploadedLottiesCannotContainRasterizedImages":                     reflect.ValueOf(constant.MakeFromLiteral("170002", token.INT, 0)),
		"ErrCodeUserIsBannedFromThisGuild":                                        reflect.ValueOf(constant.MakeFromLiteral("40007", token.INT, 0)),
		"ErrCodeYouAreNotAuthorizedToPerformThisActionOnThisApplication":          reflect.ValueOf(constant.MakeFromLiteral("20012", token.INT, 0)),
		"ErrGuildNoIcon":                                                          reflect.ValueOf(&ErrGuildNoIcon).Elem(),
		"ErrGuildNoSplash":                                                        reflect.ValueOf(&ErrGuildNoSplash).Elem(),
		"ErrJSONUnmarshal":                                                        reflect.ValueOf(&ErrJSONUnmarshal).Elem(),
		"ErrMessageIncompletePermissions":                                         reflect.ValueOf(&ErrMessageIncompletePermissions).Elem(),
		"ErrNilState":                                                             reflect.ValueOf(&ErrNilState).Elem(),
		"ErrPruneDaysBounds":                                                      reflect.ValueOf(&ErrPruneDaysBounds).Elem(),
		"ErrStateNotFound":                                                        reflect.ValueOf(&ErrStateNotFound).Elem(),
		"ErrStatusOffline":                                                        reflect.ValueOf(&ErrStatusOffline).Elem(),
		"ErrUnauthorized":                                                         reflect.ValueOf(&ErrUnauthorized).Elem(),
		"ErrUnknownTag":                                                           reflect.ValueOf(constant.MakeFromLiteral("10087", token.INT, 0)),
		"ErrVerificationLevelBounds":                                              reflect.ValueOf(&ErrVerificationLevelBounds).Elem(),
		"ErrWSAlreadyOpen":                                                        reflect.ValueOf(&ErrWSAlreadyOpen).Elem(),
		"ErrWSNotFound":                                                           reflect.ValueOf(&ErrWSNotFound).Elem(),
		"ErrWSShardBounds":                                                        reflect.ValueOf(&ErrWSShardBounds).Elem(),
		"ExpireBehaviorKick":                                                      reflect.ValueOf(ExpireBehaviorKick),
		"ExpireBehaviorRemoveRole":                                                reflect.ValueOf(ExpireBehaviorRemoveRole),
		"ExplicitContentFilterAllMembers":                                         reflect.ValueOf(ExplicitContentFilterAllMembers),
		"ExplicitContentFilterDisabled":                                           reflect.ValueOf(ExplicitContentFilterDisabled),
		"ExplicitContentFilterMembersWithoutRoles":                                reflect.ValueOf(ExplicitContentFilterMembersWithoutRoles),
		"FailedHeartbeatAcks":                                                     reflect.ValueOf(FailedHeartbeatAcks),
		"Finnish":                                                                 reflect.ValueOf(Finnish),
		"ForumLayoutGalleryView":                                                  reflect.ValueOf(ForumLayoutGalleryView),
		"ForumLayoutListView":                                                     reflect.ValueOf(ForumLayoutListView),
		"ForumLayoutNotSet":                                                       reflect.ValueOf(ForumLayoutNotSet),
		"ForumSortOrderCreationDate":                                              reflect.ValueOf(ForumSortOrderCreationDate),
		"ForumSortOrderLatestActivity":                                            reflect.ValueOf(ForumSortOrderLatestActivity),
		"French":                                                                  reflect.ValueOf(French),
		"GenerateNonce":                                                           reflect.ValueOf(GenerateNonce),
		"German":                                                                  reflect.ValueOf(German),
		"Greek":                                                                   reflect.ValueOf(Greek),
		"GuildAllChannelsID":                                                      reflect.ValueOf(GuildAllChannelsID),
		"GuildFeatureAnimatedBanner":                                              reflect.ValueOf(GuildFeatureAnimatedBanner),
		"GuildFeatureAnimatedIcon":                                                reflect.ValueOf(GuildFeatureAnimatedIcon),
		"GuildFeatureAutoModeration":                                              reflect.ValueOf(GuildFeatureAutoModeration),
		"GuildFeatureBanner":                                                      reflect.ValueOf(GuildFeatureBanner),
		"GuildFeatureCommunity":                                                   reflect.ValueOf(GuildFeatureCommunity),
		"GuildFeatureDiscoverable":                                                reflect.ValueOf(GuildFeatureDiscoverable),
		"GuildFeatureFeaturable":                                                  reflect.ValueOf(GuildFeatureFeaturable),
		"GuildFeatureInviteSplash":                                                reflect.ValueOf(GuildFeatureInviteSplash),
		"GuildFeatureMemberVerificationGateEnabled":                               reflect.ValueOf(GuildFeatureMemberVerificationGateEnabled),
		"GuildFeatureMonetizationEnabled":                                         reflect.ValueOf(GuildFeatureMonetizationEnabled),
		"GuildFeatureMoreStickers":                                                reflect.ValueOf(GuildFeatureMoreStickers),
		"GuildFeatureNews":                                                        reflect.ValueOf(GuildFeatureNews),
		"GuildFeaturePartnered":                                                   reflect.ValueOf(GuildFeaturePartnered),
		"GuildFeaturePreviewEnabled":                                              reflect.ValueOf(GuildFeaturePreviewEnabled),
		"GuildFeaturePrivateThreads":                                              reflect.ValueOf(GuildFeaturePrivateThreads),
		"GuildFeatureRoleIcons":                                                   reflect.ValueOf(GuildFeatureRoleIcons),
		"GuildFeatureTicketedEventsEnabled":                                       reflect.ValueOf(GuildFeatureTicketedEventsEnabled),
		"GuildFeatureVanityURL":                                                   reflect.ValueOf(GuildFeatureVanityURL),
		"GuildFeatureVerified":                                                    reflect.ValueOf(GuildFeatureVerified),
		"GuildFeatureVipRegions":                                                  reflect.ValueOf(GuildFeatureVipRegions),
		"GuildFeatureWelcomeScreenEnabled":                                        reflect.ValueOf(GuildFeatureWelcomeScreenEnabled),
		"GuildNSFWLevelAgeRestricted":                                             reflect.ValueOf(GuildNSFWLevelAgeRestricted),
		"GuildNSFWLevelDefault":                                                   reflect.ValueOf(GuildNSFWLevelDefault),
		"GuildNSFWLevelExplicit":                                                  reflect.ValueOf(GuildNSFWLevelExplicit),
		"GuildNSFWLevelSafe":                                                      reflect.ValueOf(GuildNSFWLevelSafe),
		"GuildScheduledEventEntityTypeExternal":                                   reflect.ValueOf(GuildScheduledEventEntityTypeExternal),
		"GuildScheduledEventEntityTypeStageInstance":                              reflect.ValueOf(GuildScheduledEventEntityTypeStageInstance),
		"GuildScheduledEventEntityTypeVoice":                                      reflect.ValueOf(GuildScheduledEventEntityTypeVoice),
		"GuildScheduledEventPrivacyLevelGuildOnly":                                reflect.ValueOf(GuildScheduledEventPrivacyLevelGuildOnly),
		"GuildScheduledEventStatusActive":                                         reflect.ValueOf(GuildScheduledEventStatusActive),
		"GuildScheduledEventStatusCanceled":                                       reflect.ValueOf(GuildScheduledEventStatusCanceled),
		"GuildScheduledEventStatusCompleted":                                      reflect.ValueOf(GuildScheduledEventStatusCompleted),
		"GuildScheduledEventStatusScheduled":                                      reflect.ValueOf(GuildScheduledEventStatusScheduled),
		"Hindi":                                                                   reflect.ValueOf(Hindi),
		"Hungarian":                                                               reflect.ValueOf(Hungarian),
		"IdentifyDiscordClient":                                                   reflect.ValueOf(&IdentifyDiscordClient).Elem(),
		"IdentifyMobile":                                                          reflect.ValueOf(&IdentifyMobile).Elem(),
		"IdentifyWeb":                                                             reflect.ValueOf(&IdentifyWeb).Elem(),
		"IntentAutoModerationConfiguration":                                       reflect.ValueOf(IntentAutoModerationConfiguration),
		"IntentAutoModerationExecution":                                           reflect.ValueOf(IntentAutoModerationExecution),
		"IntentDirectMessageReactions":                                            reflect.ValueOf(IntentDirectMessageReactions),
		"IntentDirectMessageTyping":                                               reflect.ValueOf(IntentDirectMessageTyping),
		"IntentDirectMessages":                                                    reflect.ValueOf(IntentDirectMessages),
		"IntentGuildBans":                                                         reflect.ValueOf(IntentGuildBans),
		"IntentGuildEmojis":                                                       reflect.ValueOf(IntentGuildEmojis),
		"IntentGuildIntegrations":                                                 reflect.ValueOf(IntentGuildIntegrations),
		"IntentGuildInvites":                                                      reflect.ValueOf(IntentGuildInvites),
		"IntentGuildMembers":                                                      reflect.ValueOf(IntentGuildMembers),
		"IntentGuildMessageReactions":                                             reflect.ValueOf(IntentGuildMessageReactions),
		"IntentGuildMessageTyping":                                                reflect.ValueOf(IntentGuildMessageTyping),
		"IntentGuildMessages":                                                     reflect.ValueOf(IntentGuildMessages),
		"IntentGuildPresences":                                                    reflect.ValueOf(IntentGuildPresences),
		"IntentGuildScheduledEvents":                                              reflect.ValueOf(IntentGuildScheduledEvents),
		"IntentGuildVoiceStates":                                                  reflect.ValueOf(IntentGuildVoiceStates),
		"IntentGuildWebhooks":                                                     reflect.ValueOf(IntentGuildWebhooks),
		"IntentGuilds":                                                            reflect.ValueOf(IntentGuilds),
		"IntentMessageContent":                                                    reflect.ValueOf(IntentMessageContent),
		"IntentsAll":                                                              reflect.ValueOf(IntentsAll),
		"IntentsAllWithoutPrivileged":                                             reflect.ValueOf(IntentsAllWithoutPrivileged),
		"IntentsDirectMessageReactions":                                           reflect.ValueOf(IntentsDirectMessageReactions),
		"IntentsDirectMessageTyping":                                              reflect.ValueOf(IntentsDirectMessageTyping),
		"IntentsDirectMessages":                                                   reflect.ValueOf(IntentsDirectMessages),
		"IntentsGuildBans":                                                        reflect.ValueOf(IntentsGuildBans),
		"IntentsGuildEmojis":                                                      reflect.ValueOf(IntentsGuildEmojis),
		"IntentsGuildIntegrations":                                                reflect.ValueOf(IntentsGuildIntegrations),
		"IntentsGuildInvites":                                                     reflect.ValueOf(IntentsGuildInvites),
		"IntentsGuildMembers":                                                     reflect.ValueOf(IntentsGuildMembers),
		"IntentsGuildMessageReactions":                                            reflect.ValueOf(IntentsGuildMessageReactions),
		"IntentsGuildMessageTyping":                                               reflect.ValueOf(IntentsGuildMessageTyping),
		"IntentsGuildMessages":                                                    reflect.ValueOf(IntentsGuildMessages),
		"IntentsGuildPresences":                                                   reflect.ValueOf(IntentsGuildPresences),
		"IntentsGuildScheduledEvents":                                             reflect.ValueOf(IntentsGuildScheduledEvents),
		"IntentsGuildVoiceStates":                                                 reflect.ValueOf(IntentsGuildVoiceStates),
		"IntentsGuildWebhooks":                                                    reflect.ValueOf(IntentsGuildWebhooks),
		"IntentsGuilds":                                                           reflect.ValueOf(IntentsGuilds),
		"IntentsMessageContent":                                                   reflect.ValueOf(IntentsMessageContent),
		"IntentsNone":                                                             reflect.ValueOf(IntentsNone),
		"InteractionApplicationCommand":                                           reflect.ValueOf(InteractionApplicationCommand),
		"InteractionApplicationCommandAutocomplete":                               reflect.ValueOf(InteractionApplicationCommandAutocomplete),
		"InteractionApplicationCommandAutocompleteResult":                         reflect.ValueOf(InteractionApplicationCommandAutocompleteResult),
		"InteractionDeadline":                                                     reflect.ValueOf(InteractionDeadline),
		"InteractionMessageComponent":                                             reflect.ValueOf(InteractionMessageComponent),
		"InteractionModalSubmit":                                                  reflect.ValueOf(InteractionModalSubmit),
		"InteractionPing":                                                         reflect.ValueOf(InteractionPing),
		"InteractionResponseChannelMessageWithSource":                             reflect.ValueOf(InteractionResponseChannelMessageWithSource),
		"InteractionResponseDeferredChannelMessageWithSource":                     reflect.ValueOf(InteractionResponseDeferredChannelMessageWithSource),
		"InteractionResponseDeferredMessageUpdate":                                reflect.ValueOf(InteractionResponseDeferredMessageUpdate),
		"InteractionResponseModal":                                                reflect.ValueOf(InteractionResponseModal),
		"InteractionResponsePong":                                                 reflect.ValueOf(InteractionResponsePong),
		"InteractionResponseUpdateMessage":                                        reflect.ValueOf(InteractionResponseUpdateMessage),
		"InviteTargetEmbeddedApplication":                                         reflect.ValueOf(InviteTargetEmbeddedApplication),
		"InviteTargetStream":                                                      reflect.ValueOf(InviteTargetStream),
		"Italian":                                                                 reflect.ValueOf(Italian),
		"Japanese":                                                                reflect.ValueOf(Japanese),
		"Korean":                                                                  reflect.ValueOf(Korean),
		"LinkButton":                                                              reflect.ValueOf(LinkButton),
		"Lithuanian":                                                              reflect.ValueOf(Lithuanian),
		"Locales":                                                                 reflect.ValueOf(&Locales).Elem(),
		"LogDebug":                                                                reflect.ValueOf(LogDebug),
		"LogError":                                                                reflect.ValueOf(LogError),
		"LogInformational":                                                        reflect.ValueOf(LogInformational),
		"LogWarning":                                                              reflect.ValueOf(LogWarning),
		"Logger":                                                                  reflect.ValueOf(&Logger).Elem(),
		"MakeIntent":                                                              reflect.ValueOf(MakeIntent),
		"Marshal":                                                                 reflect.ValueOf(&Marshal).Elem(),
		"MembershipStateAccepted":                                                 reflect.ValueOf(MembershipStateAccepted),
		"MembershipStateInvited":                                                  reflect.ValueOf(MembershipStateInvited),
		"MentionableSelectMenu":                                                   reflect.ValueOf(MentionableSelectMenu),
		"MentionableSelectMenuComponent":                                          reflect.ValueOf(MentionableSelectMenuComponent),
		"MessageActivityTypeJoin":                                                 reflect.ValueOf(MessageActivityTypeJoin),
		"MessageActivityTypeJoinRequest":                                          reflect.ValueOf(MessageActivityTypeJoinRequest),
		"MessageActivityTypeListen":                                               reflect.ValueOf(MessageActivityTypeListen),
		"MessageActivityTypeSpectate":                                             reflect.ValueOf(MessageActivityTypeSpectate),
		"MessageApplicationCommand":                                               reflect.ValueOf(MessageApplicationCommand),
		"MessageComponentFromJSON":                                                reflect.ValueOf(MessageComponentFromJSON),
		"MessageFlagsCrossPosted":                                                 reflect.ValueOf(MessageFlagsCrossPosted),
		"MessageFlagsEphemeral":                                                   reflect.ValueOf(MessageFlagsEphemeral),
		"MessageFlagsFailedToMentionSomeRolesInThread":                            reflect.ValueOf(MessageFlagsFailedToMentionSomeRolesInThread),
		"MessageFlagsHasThread":                                                   reflect.ValueOf(MessageFlagsHasThread),
		"MessageFlagsIsCrossPosted":                                               reflect.ValueOf(MessageFlagsIsCrossPosted),
		"MessageFlagsLoading":                                                     reflect.ValueOf(MessageFlagsLoading),
		"MessageFlagsSourceMessageDeleted":                                        reflect.ValueOf(MessageFlagsSourceMessageDeleted),
		"MessageFlagsSuppressEmbeds":                                              reflect.ValueOf(MessageFlagsSuppressEmbeds),
		"MessageFlagsSupressEmbeds":                                               reflect.ValueOf(MessageFlagsSupressEmbeds),
		"MessageFlagsUrgent":                                                      reflect.ValueOf(MessageFlagsUrgent),
		"MessageNotificationsAllMessages":                                         reflect.ValueOf(MessageNotificationsAllMessages),
		"MessageNotificationsOnlyMentions":                                        reflect.ValueOf(MessageNotificationsOnlyMentions),
		"MessageTypeCall":                                                         reflect.ValueOf(MessageTypeCall),
		"MessageTypeChannelFollowAdd":                                             reflect.ValueOf(MessageTypeChannelFollowAdd),
		"MessageTypeChannelIconChange":                                            reflect.ValueOf(MessageTypeChannelIconChange),
		"MessageTypeChannelNameChange":                                            reflect.ValueOf(MessageTypeChannelNameChange),
		"MessageTypeChannelPinnedMessage":                                         reflect.ValueOf(MessageTypeChannelPinnedMessage),
		"MessageTypeChatInputCommand":                                             reflect.ValueOf(MessageTypeChatInputCommand),
		"MessageTypeContextMenuCommand":                                           reflect.ValueOf(MessageTypeContextMenuCommand),
		"MessageTypeDefault":                                                      reflect.ValueOf(MessageTypeDefault),
		"MessageTypeGuildDiscoveryDisqualified":                                   reflect.ValueOf(MessageTypeGuildDiscoveryDisqualified),
		"MessageTypeGuildDiscoveryRequalified":                                    reflect.ValueOf(MessageTypeGuildDiscoveryRequalified),
		"MessageTypeGuildMemberJoin":                                              reflect.ValueOf(MessageTypeGuildMemberJoin),
		"MessageTypeRecipientAdd":                                                 reflect.ValueOf(MessageTypeRecipientAdd),
		"MessageTypeRecipientRemove":                                              reflect.ValueOf(MessageTypeRecipientRemove),
		"MessageTypeReply":                                                        reflect.ValueOf(MessageTypeReply),
		"MessageTypeThreadCreated":                                                reflect.ValueOf(MessageTypeThreadCreated),
		"MessageTypeThreadStarterMessage":                                         reflect.ValueOf(MessageTypeThreadStarterMessage),
		"MessageTypeUserPremiumGuildSubscription":                                 reflect.ValueOf(MessageTypeUserPremiumGuildSubscription),
		"MessageTypeUserPremiumGuildSubscriptionTierOne":                          reflect.ValueOf(MessageTypeUserPremiumGuildSubscriptionTierOne),
		"MessageTypeUserPremiumGuildSubscriptionTierThree":                        reflect.ValueOf(MessageTypeUserPremiumGuildSubscriptionTierThree),
		"MessageTypeUserPremiumGuildSubscriptionTierTwo":                          reflect.ValueOf(MessageTypeUserPremiumGuildSubscriptionTierTwo),
		"MfaLevelElevated":                                                        reflect.ValueOf(MfaLevelElevated),
		"MfaLevelNone":                                                            reflect.ValueOf(MfaLevelNone),
		"MultipartBodyWithJSON":                                                   reflect.ValueOf(MultipartBodyWithJSON),
		"New":                                                                     reflect.ValueOf(New),
		"NewFetchGuildMembersParams":                                              reflect.ValueOf(NewFetchGuildMembersParams),
		"NewMessageEdit":                                                          reflect.ValueOf(NewMessageEdit),
		"NewQueryGuildMembersParams":                                              reflect.ValueOf(NewQueryGuildMembersParams),
		"NewRatelimiter":                                                          reflect.ValueOf(NewRatelimiter),
		"NewState":                                                                reflect.ValueOf(NewState),
		"Norwegian":                                                               reflect.ValueOf(Norwegian),
		"OP_GUILD_SUBSCRIBE":                                                      reflect.ValueOf(constant.MakeFromLiteral("14", token.INT, 0)),
		"OP_REQUEST_MEMBERS":                                                      reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"PermissionAddReactions":                                                  reflect.ValueOf(constant.MakeFromLiteral("64", token.INT, 0)),
		"PermissionAdministrator":                                                 reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"PermissionAll":                                                           reflect.ValueOf(constant.MakeFromLiteral("1945370111", token.INT, 0)),
		"PermissionAllChannel":                                                    reflect.ValueOf(constant.MakeFromLiteral("334757329", token.INT, 0)),
		"PermissionAllText":                                                       reflect.ValueOf(constant.MakeFromLiteral("261120", token.INT, 0)),
		"PermissionAllVoice":                                                      reflect.ValueOf(constant.MakeFromLiteral("66061568", token.INT, 0)),
		"PermissionAttachFiles":                                                   reflect.ValueOf(constant.MakeFromLiteral("32768", token.INT, 0)),
		"PermissionBanMembers":                                                    reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"PermissionChangeNickname":                                                reflect.ValueOf(constant.MakeFromLiteral("67108864", token.INT, 0)),
		"PermissionCreateInstantInvite":                                           reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"PermissionCreatePrivateThreads":                                          reflect.ValueOf(constant.MakeFromLiteral("68719476736", token.INT, 0)),
		"PermissionCreatePublicThreads":                                           reflect.ValueOf(constant.MakeFromLiteral("34359738368", token.INT, 0)),
		"PermissionEmbedLinks":                                                    reflect.ValueOf(constant.MakeFromLiteral("16384", token.INT, 0)),
		"PermissionKickMembers":                                                   reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"PermissionManageChannels":                                                reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"PermissionManageEmojis":                                                  reflect.ValueOf(constant.MakeFromLiteral("1073741824", token.INT, 0)),
		"PermissionManageEvents":                                                  reflect.ValueOf(constant.MakeFromLiteral("8589934592", token.INT, 0)),
		"PermissionManageMessages":                                                reflect.ValueOf(constant.MakeFromLiteral("8192", token.INT, 0)),
		"PermissionManageNicknames":                                               reflect.ValueOf(constant.MakeFromLiteral("134217728", token.INT, 0)),
		"PermissionManageRoles":                                                   reflect.ValueOf(constant.MakeFromLiteral("268435456", token.INT, 0)),
		"PermissionManageServer":                                                  reflect.ValueOf(constant.MakeFromLiteral("32", token.INT, 0)),
		"PermissionManageThreads":                                                 reflect.ValueOf(constant.MakeFromLiteral("17179869184", token.INT, 0)),
		"PermissionManageWebhooks":                                                reflect.ValueOf(constant.MakeFromLiteral("536870912", token.INT, 0)),
		"PermissionMentionEveryone":                                               reflect.ValueOf(constant.MakeFromLiteral("131072", token.INT, 0)),
		"PermissionModerateMembers":                                               reflect.ValueOf(constant.MakeFromLiteral("1099511627776", token.INT, 0)),
		"PermissionOverwriteTypeMember":                                           reflect.ValueOf(PermissionOverwriteTypeMember),
		"PermissionOverwriteTypeRole":                                             reflect.ValueOf(PermissionOverwriteTypeRole),
		"PermissionReadMessageHistory":                                            reflect.ValueOf(constant.MakeFromLiteral("65536", token.INT, 0)),
		"PermissionReadMessages":                                                  reflect.ValueOf(constant.MakeFromLiteral("1024", token.INT, 0)),
		"PermissionSendMessages":                                                  reflect.ValueOf(constant.MakeFromLiteral("2048", token.INT, 0)),
		"PermissionSendMessagesInThreads":                                         reflect.ValueOf(constant.MakeFromLiteral("274877906944", token.INT, 0)),
		"PermissionSendTTSMessages":                                               reflect.ValueOf(constant.MakeFromLiteral("4096", token.INT, 0)),
		"PermissionUseActivities":                                                 reflect.ValueOf(constant.MakeFromLiteral("549755813888", token.INT, 0)),
		"PermissionUseExternalEmojis":                                             reflect.ValueOf(constant.MakeFromLiteral("262144", token.INT, 0)),
		"PermissionUseExternalStickers":                                           reflect.ValueOf(constant.MakeFromLiteral("137438953472", token.INT, 0)),
		"PermissionUseSlashCommands":                                              reflect.ValueOf(constant.MakeFromLiteral("2147483648", token.INT, 0)),
		"PermissionViewAuditLogs":                                                 reflect.ValueOf(constant.MakeFromLiteral("128", token.INT, 0)),
		"PermissionViewChannel":                                                   reflect.ValueOf(constant.MakeFromLiteral("1024", token.INT, 0)),
		"PermissionViewGuildInsights":                                             reflect.ValueOf(constant.MakeFromLiteral("524288", token.INT, 0)),
		"PermissionVoiceConnect":                                                  reflect.ValueOf(constant.MakeFromLiteral("1048576", token.INT, 0)),
		"PermissionVoiceDeafenMembers":                                            reflect.ValueOf(constant.MakeFromLiteral("8388608", token.INT, 0)),
		"PermissionVoiceMoveMembers":                                              reflect.ValueOf(constant.MakeFromLiteral("16777216", token.INT, 0)),
		"PermissionVoiceMuteMembers":                                              reflect.ValueOf(constant.MakeFromLiteral("4194304", token.INT, 0)),
		"PermissionVoicePrioritySpeaker":                                          reflect.ValueOf(constant.MakeFromLiteral("256", token.INT, 0)),
		"PermissionVoiceRequestToSpeak":                                           reflect.ValueOf(constant.MakeFromLiteral("4294967296", token.INT, 0)),
		"PermissionVoiceSpeak":                                                    reflect.ValueOf(constant.MakeFromLiteral("2097152", token.INT, 0)),
		"PermissionVoiceStreamVideo":                                              reflect.ValueOf(constant.MakeFromLiteral("512", token.INT, 0)),
		"PermissionVoiceUseVAD":                                                   reflect.ValueOf(constant.MakeFromLiteral("33554432", token.INT, 0)),
		"Polish":                                                                  reflect.ValueOf(Polish),
		"PortugueseBR":                                                            reflect.ValueOf(PortugueseBR),
		"PremiumTier1":                                                            reflect.ValueOf(PremiumTier1),
		"PremiumTier2":                                                            reflect.ValueOf(PremiumTier2),
		"PremiumTier3":                                                            reflect.ValueOf(PremiumTier3),
		"PremiumTierNone":                                                         reflect.ValueOf(PremiumTierNone),
		"PrimaryButton":                                                           reflect.ValueOf(PrimaryButton),
		"RoleSelectMenu":                                                          reflect.ValueOf(RoleSelectMenu),
		"RoleSelectMenuComponent":                                                 reflect.ValueOf(RoleSelectMenuComponent),
		"Romanian":                                                                reflect.ValueOf(Romanian),
		"Russian":                                                                 reflect.ValueOf(Russian),
		"SecondaryButton":                                                         reflect.ValueOf(SecondaryButton),
		"SelectMenuComponent":                                                     reflect.ValueOf(SelectMenuComponent),
		"SnowflakeTimestamp":                                                      reflect.ValueOf(SnowflakeTimestamp),
		"SpanishES":                                                               reflect.ValueOf(SpanishES),
		"StageInstancePrivacyLevelGuildOnly":                                      reflect.ValueOf(StageInstancePrivacyLevelGuildOnly),
		"StageInstancePrivacyLevelPublic":                                         reflect.ValueOf(StageInstancePrivacyLevelPublic),
		"StatusDoNotDisturb":                                                      reflect.ValueOf(StatusDoNotDisturb),
		"StatusIdle":                                                              reflect.ValueOf(StatusIdle),
		"StatusInvisible":                                                         reflect.ValueOf(StatusInvisible),
		"StatusOffline":                                                           reflect.ValueOf(StatusOffline),
		"StatusOnline":                                                            reflect.ValueOf(StatusOnline),
		"StickerFormatTypeAPNG":                                                   reflect.ValueOf(StickerFormatTypeAPNG),
		"StickerFormatTypeGIF":                                                    reflect.ValueOf(StickerFormatTypeGIF),
		"StickerFormatTypeLottie":                                                 reflect.ValueOf(StickerFormatTypeLottie),
		"StickerFormatTypePNG":                                                    reflect.ValueOf(StickerFormatTypePNG),
		"StickerTypeGuild":                                                        reflect.ValueOf(StickerTypeGuild),
		"StickerTypeStandard":                                                     reflect.ValueOf(StickerTypeStandard),
		"StringSelectMenu":                                                        reflect.ValueOf(StringSelectMenu),
		"SuccessButton":                                                           reflect.ValueOf(SuccessButton),
		"Swedish":                                                                 reflect.ValueOf(Swedish),
		"Symbols":                                                                 reflect.ValueOf(&Symbols).Elem(),
		"SystemChannelFlagsSuppressGuildReminderNotifications":                    reflect.ValueOf(SystemChannelFlagsSuppressGuildReminderNotifications),
		"SystemChannelFlagsSuppressJoinNotificationReplies":                       reflect.ValueOf(SystemChannelFlagsSuppressJoinNotificationReplies),
		"SystemChannelFlagsSuppressJoinNotifications":                             reflect.ValueOf(SystemChannelFlagsSuppressJoinNotifications),
		"SystemChannelFlagsSuppressPremium":                                       reflect.ValueOf(SystemChannelFlagsSuppressPremium),
		"TextInputComponent":                                                      reflect.ValueOf(TextInputComponent),
		"TextInputParagraph":                                                      reflect.ValueOf(TextInputParagraph),
		"TextInputShort":                                                          reflect.ValueOf(TextInputShort),
		"Thai":                                                                    reflect.ValueOf(Thai),
		"Turkish":                                                                 reflect.ValueOf(Turkish),
		"Ukrainian":                                                               reflect.ValueOf(Ukrainian),
		"Unknown":                                                                 reflect.ValueOf(Unknown),
		"Unmarshal":                                                               reflect.ValueOf(&Unmarshal).Elem(),
		"UserAgentDesktop":                                                        reflect.ValueOf(&UserAgentDesktop).Elem(),
		"UserAgentMobile":                                                         reflect.ValueOf(&UserAgentMobile).Elem(),
		"UserAgentWeb":                                                            reflect.ValueOf(&UserAgentWeb).Elem(),
		"UserApplicationCommand":                                                  reflect.ValueOf(UserApplicationCommand),
		"UserFlagActiveDeveloper":                                                 reflect.ValueOf(UserFlagActiveDeveloper),
		"UserFlagBotHTTPInteractions":                                             reflect.ValueOf(UserFlagBotHTTPInteractions),
		"UserFlagBugHunterLevel1":                                                 reflect.ValueOf(UserFlagBugHunterLevel1),
		"UserFlagBugHunterLevel2":                                                 reflect.ValueOf(UserFlagBugHunterLevel2),
		"UserFlagDiscordCertifiedModerator":                                       reflect.ValueOf(UserFlagDiscordCertifiedModerator),
		"UserFlagDiscordEmployee":                                                 reflect.ValueOf(UserFlagDiscordEmployee),
		"UserFlagDiscordPartner":                                                  reflect.ValueOf(UserFlagDiscordPartner),
		"UserFlagEarlySupporter":                                                  reflect.ValueOf(UserFlagEarlySupporter),
		"UserFlagHouseBalance":                                                    reflect.ValueOf(UserFlagHouseBalance),
		"UserFlagHouseBravery":                                                    reflect.ValueOf(UserFlagHouseBravery),
		"UserFlagHouseBrilliance":                                                 reflect.ValueOf(UserFlagHouseBrilliance),
		"UserFlagHypeSquadEvents":                                                 reflect.ValueOf(UserFlagHypeSquadEvents),
		"UserFlagSpammer":                                                         reflect.ValueOf(UserFlagSpammer),
		"UserFlagSystem":                                                          reflect.ValueOf(UserFlagSystem),
		"UserFlagTeamUser":                                                        reflect.ValueOf(UserFlagTeamUser),
		"UserFlagVerifiedBot":                                                     reflect.ValueOf(UserFlagVerifiedBot),
		"UserFlagVerifiedBotDeveloper":                                            reflect.ValueOf(UserFlagVerifiedBotDeveloper),
		"UserPremiumTypeNitro":                                                    reflect.ValueOf(UserPremiumTypeNitro),
		"UserPremiumTypeNitroBasic":                                               reflect.ValueOf(UserPremiumTypeNitroBasic),
		"UserPremiumTypeNitroClassic":                                             reflect.ValueOf(UserPremiumTypeNitroClassic),
		"UserPremiumTypeNone":                                                     reflect.ValueOf(UserPremiumTypeNone),
		"UserSelectMenu":                                                          reflect.ValueOf(UserSelectMenu),
		"UserSelectMenuComponent":                                                 reflect.ValueOf(UserSelectMenuComponent),
		"VERSION":                                                                 reflect.ValueOf(constant.MakeFromLiteral("\"0.26.5\"", token.STRING, 0)),
		"VerificationLevelHigh":                                                   reflect.ValueOf(VerificationLevelHigh),
		"VerificationLevelLow":                                                    reflect.ValueOf(VerificationLevelLow),
		"VerificationLevelMedium":                                                 reflect.ValueOf(VerificationLevelMedium),
		"VerificationLevelNone":                                                   reflect.ValueOf(VerificationLevelNone),
		"VerificationLevelVeryHigh":                                               reflect.ValueOf(VerificationLevelVeryHigh),
		"VerifyInteraction":                                                       reflect.ValueOf(VerifyInteraction),
		"Vietnamese":                                                              reflect.ValueOf(Vietnamese),
		"WebhookTypeChannelFollower":                                              reflect.ValueOf(WebhookTypeChannelFollower),
		"WebhookTypeIncoming":                                                     reflect.ValueOf(WebhookTypeIncoming),

		// type definitions
		"APIErrorMessage":                           reflect.ValueOf((*APIErrorMessage)(nil)),
		"ActionsRow":                                reflect.ValueOf((*ActionsRow)(nil)),
		"Activity":                                  reflect.ValueOf((*Activity)(nil)),
		"ActivityMetadata":                          reflect.ValueOf((*ActivityMetadata)(nil)),
		"ActivityType":                              reflect.ValueOf((*ActivityType)(nil)),
		"AddedThreadMember":                         reflect.ValueOf((*AddedThreadMember)(nil)),
		"AllowedMentionType":                        reflect.ValueOf((*AllowedMentionType)(nil)),
		"Application":                               reflect.ValueOf((*Application)(nil)),
		"ApplicationCommand":                        reflect.ValueOf((*ApplicationCommand)(nil)),
		"ApplicationCommandInteractionData":         reflect.ValueOf((*ApplicationCommandInteractionData)(nil)),
		"ApplicationCommandInteractionDataOption":   reflect.ValueOf((*ApplicationCommandInteractionDataOption)(nil)),
		"ApplicationCommandInteractionDataResolved": reflect.ValueOf((*ApplicationCommandInteractionDataResolved)(nil)),
		"ApplicationCommandOption":                  reflect.ValueOf((*ApplicationCommandOption)(nil)),
		"ApplicationCommandOptionChoice":            reflect.ValueOf((*ApplicationCommandOptionChoice)(nil)),
		"ApplicationCommandOptionType":              reflect.ValueOf((*ApplicationCommandOptionType)(nil)),
		"ApplicationCommandPermissionType":          reflect.ValueOf((*ApplicationCommandPermissionType)(nil)),
		"ApplicationCommandPermissions":             reflect.ValueOf((*ApplicationCommandPermissions)(nil)),
		"ApplicationCommandPermissionsList":         reflect.ValueOf((*ApplicationCommandPermissionsList)(nil)),
		"ApplicationCommandPermissionsUpdate":       reflect.ValueOf((*ApplicationCommandPermissionsUpdate)(nil)),
		"ApplicationCommandType":                    reflect.ValueOf((*ApplicationCommandType)(nil)),
		"ApplicationCommandsSearchParams":           reflect.ValueOf((*ApplicationCommandsSearchParams)(nil)),
		"ApplicationRoleConnection":                 reflect.ValueOf((*ApplicationRoleConnection)(nil)),
		"ApplicationRoleConnectionMetadata":         reflect.ValueOf((*ApplicationRoleConnectionMetadata)(nil)),
		"ApplicationRoleConnectionMetadataType":     reflect.ValueOf((*ApplicationRoleConnectionMetadataType)(nil)),
		"Asset":                                     reflect.ValueOf((*Asset)(nil)),
		"Assets":                                    reflect.ValueOf((*Assets)(nil)),
		"AuditLogAction":                            reflect.ValueOf((*AuditLogAction)(nil)),
		"AuditLogChange":                            reflect.ValueOf((*AuditLogChange)(nil)),
		"AuditLogChangeKey":                         reflect.ValueOf((*AuditLogChangeKey)(nil)),
		"AuditLogEntry":                             reflect.ValueOf((*AuditLogEntry)(nil)),
		"AuditLogOptions":                           reflect.ValueOf((*AuditLogOptions)(nil)),
		"AuditLogOptionsType":                       reflect.ValueOf((*AuditLogOptionsType)(nil)),
		"AutoModerationAction":                      reflect.ValueOf((*AutoModerationAction)(nil)),
		"AutoModerationActionExecution":             reflect.ValueOf((*AutoModerationActionExecution)(nil)),
		"AutoModerationActionMetadata":              reflect.ValueOf((*AutoModerationActionMetadata)(nil)),
		"AutoModerationActionType":                  reflect.ValueOf((*AutoModerationActionType)(nil)),
		"AutoModerationKeywordPreset":               reflect.ValueOf((*AutoModerationKeywordPreset)(nil)),
		"AutoModerationRule":                        reflect.ValueOf((*AutoModerationRule)(nil)),
		"AutoModerationRuleCreate":                  reflect.ValueOf((*AutoModerationRuleCreate)(nil)),
		"AutoModerationRuleDelete":                  reflect.ValueOf((*AutoModerationRuleDelete)(nil)),
		"AutoModerationRuleEventType":               reflect.ValueOf((*AutoModerationRuleEventType)(nil)),
		"AutoModerationRuleTriggerType":             reflect.ValueOf((*AutoModerationRuleTriggerType)(nil)),
		"AutoModerationRuleUpdate":                  reflect.ValueOf((*AutoModerationRuleUpdate)(nil)),
		"AutoModerationTriggerMetadata":             reflect.ValueOf((*AutoModerationTriggerMetadata)(nil)),
		"Bucket":                                    reflect.ValueOf((*Bucket)(nil)),
		"Button":                                    reflect.ValueOf((*Button)(nil)),
		"ButtonStyle":                               reflect.ValueOf((*ButtonStyle)(nil)),
		"Channel":                                   reflect.ValueOf((*Channel)(nil)),
		"ChannelCreate":                             reflect.ValueOf((*ChannelCreate)(nil)),
		"ChannelDelete":                             reflect.ValueOf((*ChannelDelete)(nil)),
		"ChannelEdit":                               reflect.ValueOf((*ChannelEdit)(nil)),
		"ChannelFlags":                              reflect.ValueOf((*ChannelFlags)(nil)),
		"ChannelFollow":                             reflect.ValueOf((*ChannelFollow)(nil)),
		"ChannelPinsUpdate":                         reflect.ValueOf((*ChannelPinsUpdate)(nil)),
		"ChannelRecipientAdd":                       reflect.ValueOf((*ChannelRecipientAdd)(nil)),
		"ChannelRecipientRemove":                    reflect.ValueOf((*ChannelRecipientRemove)(nil)),
		"ChannelType":                               reflect.ValueOf((*ChannelType)(nil)),
		"ChannelUpdate":                             reflect.ValueOf((*ChannelUpdate)(nil)),
		"ClientState":                               reflect.ValueOf((*ClientState)(nil)),
		"ClientStatus":                              reflect.ValueOf((*ClientStatus)(nil)),
		"ComponentEmoji":                            reflect.ValueOf((*ComponentEmoji)(nil)),
		"ComponentType":                             reflect.ValueOf((*ComponentType)(nil)),
		"Connect":                                   reflect.ValueOf((*Connect)(nil)),
		"Disconnect":                                reflect.ValueOf((*Disconnect)(nil)),
		"EmbedType":                                 reflect.ValueOf((*EmbedType)(nil)),
		"Emoji":                                     reflect.ValueOf((*Emoji)(nil)),
		"EmojiParams":                               reflect.ValueOf((*EmojiParams)(nil)),
		"Event":                                     reflect.ValueOf((*Event)(nil)),
		"EventHandler":                              reflect.ValueOf((*EventHandler)(nil)),
		"EventInterfaceProvider":                    reflect.ValueOf((*EventInterfaceProvider)(nil)),
		"ExpireBehavior":                            reflect.ValueOf((*ExpireBehavior)(nil)),
		"ExplicitContentFilterLevel":                reflect.ValueOf((*ExplicitContentFilterLevel)(nil)),
		"FetchGuildMembersParams":                   reflect.ValueOf((*FetchGuildMembersParams)(nil)),
		"File":                                      reflect.ValueOf((*File)(nil)),
		"ForumDefaultReaction":                      reflect.ValueOf((*ForumDefaultReaction)(nil)),
		"ForumLayout":                               reflect.ValueOf((*ForumLayout)(nil)),
		"ForumSortOrderType":                        reflect.ValueOf((*ForumSortOrderType)(nil)),
		"ForumTag":                                  reflect.ValueOf((*ForumTag)(nil)),
		"FriendSourceFlags":                         reflect.ValueOf((*FriendSourceFlags)(nil)),
		"GatewayBotResponse":                        reflect.ValueOf((*GatewayBotResponse)(nil)),
		"GatewaySession":                            reflect.ValueOf((*GatewaySession)(nil)),
		"GatewayStatusUpdate":                       reflect.ValueOf((*GatewayStatusUpdate)(nil)),
		"Guild":                                     reflect.ValueOf((*Guild)(nil)),
		"GuildApplicationCommandPermissions":        reflect.ValueOf((*GuildApplicationCommandPermissions)(nil)),
		"GuildAuditLog":                             reflect.ValueOf((*GuildAuditLog)(nil)),
		"GuildBan":                                  reflect.ValueOf((*GuildBan)(nil)),
		"GuildBanAdd":                               reflect.ValueOf((*GuildBanAdd)(nil)),
		"GuildBanRemove":                            reflect.ValueOf((*GuildBanRemove)(nil)),
		"GuildChannelCreateData":                    reflect.ValueOf((*GuildChannelCreateData)(nil)),
		"GuildCreate":                               reflect.ValueOf((*GuildCreate)(nil)),
		"GuildDelete":                               reflect.ValueOf((*GuildDelete)(nil)),
		"GuildEmbed":                                reflect.ValueOf((*GuildEmbed)(nil)),
		"GuildEmojisUpdate":                         reflect.ValueOf((*GuildEmojisUpdate)(nil)),
		"GuildFeature":                              reflect.ValueOf((*GuildFeature)(nil)),
		"GuildIntegrationsUpdate":                   reflect.ValueOf((*GuildIntegrationsUpdate)(nil)),
		"GuildMemberAdd":                            reflect.ValueOf((*GuildMemberAdd)(nil)),
		"GuildMemberAddParams":                      reflect.ValueOf((*GuildMemberAddParams)(nil)),
		"GuildMemberListUpdate":                     reflect.ValueOf((*GuildMemberListUpdate)(nil)),
		"GuildMemberParams":                         reflect.ValueOf((*GuildMemberParams)(nil)),
		"GuildMemberRemove":                         reflect.ValueOf((*GuildMemberRemove)(nil)),
		"GuildMemberUpdate":                         reflect.ValueOf((*GuildMemberUpdate)(nil)),
		"GuildMembersChunk":                         reflect.ValueOf((*GuildMembersChunk)(nil)),
		"GuildNSFWLevel":                            reflect.ValueOf((*GuildNSFWLevel)(nil)),
		"GuildParams":                               reflect.ValueOf((*GuildParams)(nil)),
		"GuildPreview":                              reflect.ValueOf((*GuildPreview)(nil)),
		"GuildProperties":                           reflect.ValueOf((*GuildProperties)(nil)),
		"GuildRole":                                 reflect.ValueOf((*GuildRole)(nil)),
		"GuildRoleCreate":                           reflect.ValueOf((*GuildRoleCreate)(nil)),
		"GuildRoleDelete":                           reflect.ValueOf((*GuildRoleDelete)(nil)),
		"GuildRoleUpdate":                           reflect.ValueOf((*GuildRoleUpdate)(nil)),
		"GuildScheduledEvent":                       reflect.ValueOf((*GuildScheduledEvent)(nil)),
		"GuildScheduledEventCreate":                 reflect.ValueOf((*GuildScheduledEventCreate)(nil)),
		"GuildScheduledEventDelete":                 reflect.ValueOf((*GuildScheduledEventDelete)(nil)),
		"GuildScheduledEventEntityMetadata":         reflect.ValueOf((*GuildScheduledEventEntityMetadata)(nil)),
		"GuildScheduledEventEntityType":             reflect.ValueOf((*GuildScheduledEventEntityType)(nil)),
		"GuildScheduledEventParams":                 reflect.ValueOf((*GuildScheduledEventParams)(nil)),
		"GuildScheduledEventPrivacyLevel":           reflect.ValueOf((*GuildScheduledEventPrivacyLevel)(nil)),
		"GuildScheduledEventStatus":                 reflect.ValueOf((*GuildScheduledEventStatus)(nil)),
		"GuildScheduledEventUpdate":                 reflect.ValueOf((*GuildScheduledEventUpdate)(nil)),
		"GuildScheduledEventUser":                   reflect.ValueOf((*GuildScheduledEventUser)(nil)),
		"GuildScheduledEventUserAdd":                reflect.ValueOf((*GuildScheduledEventUserAdd)(nil)),
		"GuildScheduledEventUserRemove":             reflect.ValueOf((*GuildScheduledEventUserRemove)(nil)),
		"GuildTemplate":                             reflect.ValueOf((*GuildTemplate)(nil)),
		"GuildTemplateParams":                       reflect.ValueOf((*GuildTemplateParams)(nil)),
		"GuildUpdate":                               reflect.ValueOf((*GuildUpdate)(nil)),
		"Identify":                                  reflect.ValueOf((*Identify)(nil)),
		"IdentifyProperties":                        reflect.ValueOf((*IdentifyProperties)(nil)),
		"IdentifyPropertiesDesktop":                 reflect.ValueOf((*IdentifyPropertiesDesktop)(nil)),
		"IdentifyPropertiesMobile":                  reflect.ValueOf((*IdentifyPropertiesMobile)(nil)),
		"IdentifyPropertiesWeb":                     reflect.ValueOf((*IdentifyPropertiesWeb)(nil)),
		"Integration":                               reflect.ValueOf((*Integration)(nil)),
		"IntegrationAccount":                        reflect.ValueOf((*IntegrationAccount)(nil)),
		"Intent":                                    reflect.ValueOf((*Intent)(nil)),
		"InteractData":                              reflect.ValueOf((*InteractData)(nil)),
		"Interaction":                               reflect.ValueOf((*Interaction)(nil)),
		"InteractionClick":                          reflect.ValueOf((*InteractionClick)(nil)),
		"InteractionClickData":                      reflect.ValueOf((*InteractionClickData)(nil)),
		"InteractionCreate":                         reflect.ValueOf((*InteractionCreate)(nil)),
		"InteractionData":                           reflect.ValueOf((*InteractionData)(nil)),
		"InteractionModalCreate":                    reflect.ValueOf((*InteractionModalCreate)(nil)),
		"InteractionResponse":                       reflect.ValueOf((*InteractionResponse)(nil)),
		"InteractionResponseData":                   reflect.ValueOf((*InteractionResponseData)(nil)),
		"InteractionResponseType":                   reflect.ValueOf((*InteractionResponseType)(nil)),
		"InteractionType":                           reflect.ValueOf((*InteractionType)(nil)),
		"Invite":                                    reflect.ValueOf((*Invite)(nil)),
		"InviteCreate":                              reflect.ValueOf((*InviteCreate)(nil)),
		"InviteDelete":                              reflect.ValueOf((*InviteDelete)(nil)),
		"InviteTargetType":                          reflect.ValueOf((*InviteTargetType)(nil)),
		"Locale":                                    reflect.ValueOf((*Locale)(nil)),
		"LoginSession":                              reflect.ValueOf((*LoginSession)(nil)),
		"Member":                                    reflect.ValueOf((*Member)(nil)),
		"MemberSidebar":                             reflect.ValueOf((*MemberSidebar)(nil)),
		"MembershipState":                           reflect.ValueOf((*MembershipState)(nil)),
		"Message":                                   reflect.ValueOf((*Message)(nil)),
		"MessageActivity":                           reflect.ValueOf((*MessageActivity)(nil)),
		"MessageActivityType":                       reflect.ValueOf((*MessageActivityType)(nil)),
		"MessageAllowedMentions":                    reflect.ValueOf((*MessageAllowedMentions)(nil)),
		"MessageApplication":                        reflect.ValueOf((*MessageApplication)(nil)),
		"MessageAttachment":                         reflect.ValueOf((*MessageAttachment)(nil)),
		"MessageComponent":                          reflect.ValueOf((*MessageComponent)(nil)),
		"MessageComponentInteractionData":           reflect.ValueOf((*MessageComponentInteractionData)(nil)),
		"MessageComponentInteractionDataResolved":   reflect.ValueOf((*MessageComponentInteractionDataResolved)(nil)),
		"MessageCreate":                             reflect.ValueOf((*MessageCreate)(nil)),
		"MessageDelete":                             reflect.ValueOf((*MessageDelete)(nil)),
		"MessageDeleteBulk":                         reflect.ValueOf((*MessageDeleteBulk)(nil)),
		"MessageEdit":                               reflect.ValueOf((*MessageEdit)(nil)),
		"MessageEmbed":                              reflect.ValueOf((*MessageEmbed)(nil)),
		"MessageEmbedAuthor":                        reflect.ValueOf((*MessageEmbedAuthor)(nil)),
		"MessageEmbedField":                         reflect.ValueOf((*MessageEmbedField)(nil)),
		"MessageEmbedFooter":                        reflect.ValueOf((*MessageEmbedFooter)(nil)),
		"MessageEmbedImage":                         reflect.ValueOf((*MessageEmbedImage)(nil)),
		"MessageEmbedProvider":                      reflect.ValueOf((*MessageEmbedProvider)(nil)),
		"MessageEmbedThumbnail":                     reflect.ValueOf((*MessageEmbedThumbnail)(nil)),
		"MessageEmbedVideo":                         reflect.ValueOf((*MessageEmbedVideo)(nil)),
		"MessageFlags":                              reflect.ValueOf((*MessageFlags)(nil)),
		"MessageInteraction":                        reflect.ValueOf((*MessageInteraction)(nil)),
		"MessageNotifications":                      reflect.ValueOf((*MessageNotifications)(nil)),
		"MessageReaction":                           reflect.ValueOf((*MessageReaction)(nil)),
		"MessageReactionAdd":                        reflect.ValueOf((*MessageReactionAdd)(nil)),
		"MessageReactionRemove":                     reflect.ValueOf((*MessageReactionRemove)(nil)),
		"MessageReactionRemoveAll":                  reflect.ValueOf((*MessageReactionRemoveAll)(nil)),
		"MessageReactions":                          reflect.ValueOf((*MessageReactions)(nil)),
		"MessageReference":                          reflect.ValueOf((*MessageReference)(nil)),
		"MessageSend":                               reflect.ValueOf((*MessageSend)(nil)),
		"MessageType":                               reflect.ValueOf((*MessageType)(nil)),
		"MessageUpdate":                             reflect.ValueOf((*MessageUpdate)(nil)),
		"MfaLevel":                                  reflect.ValueOf((*MfaLevel)(nil)),
		"ModalSubmit":                               reflect.ValueOf((*ModalSubmit)(nil)),
		"ModalSubmitData":                           reflect.ValueOf((*ModalSubmitData)(nil)),
		"ModalSubmitInteractionData":                reflect.ValueOf((*ModalSubmitInteractionData)(nil)),
		"Operator":                                  reflect.ValueOf((*Operator)(nil)),
		"Packet":                                    reflect.ValueOf((*Packet)(nil)),
		"Party":                                     reflect.ValueOf((*Party)(nil)),
		"PermissionOverwrite":                       reflect.ValueOf((*PermissionOverwrite)(nil)),
		"PermissionOverwriteType":                   reflect.ValueOf((*PermissionOverwriteType)(nil)),
		"Poll":                                      reflect.ValueOf((*Poll)(nil)),
		"PollAnswer":                                reflect.ValueOf((*PollAnswer)(nil)),
		"PollEmoji":                                 reflect.ValueOf((*PollEmoji)(nil)),
		"PollMedia":                                 reflect.ValueOf((*PollMedia)(nil)),
		"PollQuestion":                              reflect.ValueOf((*PollQuestion)(nil)),
		"PremiumTier":                               reflect.ValueOf((*PremiumTier)(nil)),
		"Presence":                                  reflect.ValueOf((*Presence)(nil)),
		"PresenceUpdate":                            reflect.ValueOf((*PresenceUpdate)(nil)),
		"PresencesReplace":                          reflect.ValueOf((*PresencesReplace)(nil)),
		"Profile":                                   reflect.ValueOf((*Profile)(nil)),
		"QueryGuildMembersParams":                   reflect.ValueOf((*QueryGuildMembersParams)(nil)),
		"QueryGuildMembersPayload":                  reflect.ValueOf((*QueryGuildMembersPayload)(nil)),
		"QueryGuildMembersPayloadData":              reflect.ValueOf((*QueryGuildMembersPayloadData)(nil)),
		"RESTError":                                 reflect.ValueOf((*RESTError)(nil)),
		"RateLimit":                                 reflect.ValueOf((*RateLimit)(nil)),
		"RateLimitError":                            reflect.ValueOf((*RateLimitError)(nil)),
		"RateLimiter":                               reflect.ValueOf((*RateLimiter)(nil)),
		"ReadState":                                 reflect.ValueOf((*ReadState)(nil)),
		"ReadStateData":                             reflect.ValueOf((*ReadStateData)(nil)),
		"Ready":                                     reflect.ValueOf((*Ready)(nil)),
		"ReadyGuild":                                reflect.ValueOf((*ReadyGuild)(nil)),
		"Relationship":                              reflect.ValueOf((*Relationship)(nil)),
		"RelationshipAdd":                           reflect.ValueOf((*RelationshipAdd)(nil)),
		"RelationshipRemove":                        reflect.ValueOf((*RelationshipRemove)(nil)),
		"RequestLazyGuildData":                      reflect.ValueOf((*RequestLazyGuildData)(nil)),
		"Resumed":                                   reflect.ValueOf((*Resumed)(nil)),
		"Role":                                      reflect.ValueOf((*Role)(nil)),
		"RoleParams":                                reflect.ValueOf((*RoleParams)(nil)),
		"Roles":                                     reflect.ValueOf((*Roles)(nil)),
		"Secrets":                                   reflect.ValueOf((*Secrets)(nil)),
		"SelectMenu":                                reflect.ValueOf((*SelectMenu)(nil)),
		"SelectMenuOption":                          reflect.ValueOf((*SelectMenuOption)(nil)),
		"SelectMenuType":                            reflect.ValueOf((*SelectMenuType)(nil)),
		"Session":                                   reflect.ValueOf((*Session)(nil)),
		"SessionClientInfo":                         reflect.ValueOf((*SessionClientInfo)(nil)),
		"SessionInformation":                        reflect.ValueOf((*SessionInformation)(nil)),
		"SessionsReplace":                           reflect.ValueOf((*SessionsReplace)(nil)),
		"Settings":                                  reflect.ValueOf((*Settings)(nil)),
		"StageInstance":                             reflect.ValueOf((*StageInstance)(nil)),
		"StageInstanceEventCreate":                  reflect.ValueOf((*StageInstanceEventCreate)(nil)),
		"StageInstanceEventDelete":                  reflect.ValueOf((*StageInstanceEventDelete)(nil)),
		"StageInstanceEventUpdate":                  reflect.ValueOf((*StageInstanceEventUpdate)(nil)),
		"StageInstanceParams":                       reflect.ValueOf((*StageInstanceParams)(nil)),
		"StageInstancePrivacyLevel":                 reflect.ValueOf((*StageInstancePrivacyLevel)(nil)),
		"State":                                     reflect.ValueOf((*State)(nil)),
		"Status":                                    reflect.ValueOf((*Status)(nil)),
		"Sticker":                                   reflect.ValueOf((*Sticker)(nil)),
		"StickerFormat":                             reflect.ValueOf((*StickerFormat)(nil)),
		"StickerPack":                               reflect.ValueOf((*StickerPack)(nil)),
		"StickerType":                               reflect.ValueOf((*StickerType)(nil)),
		"SyncItem":                                  reflect.ValueOf((*SyncItem)(nil)),
		"SyncItemGroup":                             reflect.ValueOf((*SyncItemGroup)(nil)),
		"SystemChannelFlag":                         reflect.ValueOf((*SystemChannelFlag)(nil)),
		"Team":                                      reflect.ValueOf((*Team)(nil)),
		"TeamMember":                                reflect.ValueOf((*TeamMember)(nil)),
		"TextInput":                                 reflect.ValueOf((*TextInput)(nil)),
		"TextInputStyle":                            reflect.ValueOf((*TextInputStyle)(nil)),
		"ThreadCreate":                              reflect.ValueOf((*ThreadCreate)(nil)),
		"ThreadDelete":                              reflect.ValueOf((*ThreadDelete)(nil)),
		"ThreadListSync":                            reflect.ValueOf((*ThreadListSync)(nil)),
		"ThreadMember":                              reflect.ValueOf((*ThreadMember)(nil)),
		"ThreadMemberUpdate":                        reflect.ValueOf((*ThreadMemberUpdate)(nil)),
		"ThreadMembersUpdate":                       reflect.ValueOf((*ThreadMembersUpdate)(nil)),
		"ThreadMetadata":                            reflect.ValueOf((*ThreadMetadata)(nil)),
		"ThreadStart":                               reflect.ValueOf((*ThreadStart)(nil)),
		"ThreadUpdate":                              reflect.ValueOf((*ThreadUpdate)(nil)),
		"ThreadsList":                               reflect.ValueOf((*ThreadsList)(nil)),
		"TimeStamps":                                reflect.ValueOf((*TimeStamps)(nil)),
		"TooManyRequests":                           reflect.ValueOf((*TooManyRequests)(nil)),
		"TypingStart":                               reflect.ValueOf((*TypingStart)(nil)),
		"UpdateStatusData":                          reflect.ValueOf((*UpdateStatusData)(nil)),
		"User":                                      reflect.ValueOf((*User)(nil)),
		"UserConnection":                            reflect.ValueOf((*UserConnection)(nil)),
		"UserFlags":                                 reflect.ValueOf((*UserFlags)(nil)),
		"UserGuild":                                 reflect.ValueOf((*UserGuild)(nil)),
		"UserGuildSettings":                         reflect.ValueOf((*UserGuildSettings)(nil)),
		"UserGuildSettingsChannelOverride":          reflect.ValueOf((*UserGuildSettingsChannelOverride)(nil)),
		"UserGuildSettingsData":                     reflect.ValueOf((*UserGuildSettingsData)(nil)),
		"UserPremiumType":                           reflect.ValueOf((*UserPremiumType)(nil)),
		"UserUpdate":                                reflect.ValueOf((*UserUpdate)(nil)),
		"VerificationLevel":                         reflect.ValueOf((*VerificationLevel)(nil)),
		"VoiceConnection":                           reflect.ValueOf((*VoiceConnection)(nil)),
		"VoiceRegion":                               reflect.ValueOf((*VoiceRegion)(nil)),
		"VoiceServerUpdate":                         reflect.ValueOf((*VoiceServerUpdate)(nil)),
		"VoiceSpeakingUpdate":                       reflect.ValueOf((*VoiceSpeakingUpdate)(nil)),
		"VoiceSpeakingUpdateHandler":                reflect.ValueOf((*VoiceSpeakingUpdateHandler)(nil)),
		"VoiceState":                                reflect.ValueOf((*VoiceState)(nil)),
		"VoiceStateUpdate":                          reflect.ValueOf((*VoiceStateUpdate)(nil)),
		"Webhook":                                   reflect.ValueOf((*Webhook)(nil)),
		"WebhookEdit":                               reflect.ValueOf((*WebhookEdit)(nil)),
		"WebhookParams":                             reflect.ValueOf((*WebhookParams)(nil)),
		"WebhookType":                               reflect.ValueOf((*WebhookType)(nil)),
		"WebhooksUpdate":                            reflect.ValueOf((*WebhooksUpdate)(nil)),

		// interface wrapper definitions
		"_EventHandler":           reflect.ValueOf((*_github_com_lb-selfbot_discordgo_EventHandler)(nil)),
		"_EventInterfaceProvider": reflect.ValueOf((*_github_com_lb-selfbot_discordgo_EventInterfaceProvider)(nil)),
		"_InteractionData":        reflect.ValueOf((*_github_com_lb-selfbot_discordgo_InteractionData)(nil)),
		"_MessageComponent":       reflect.ValueOf((*_github_com_lb-selfbot_discordgo_MessageComponent)(nil)),
	}
}

// _github_com_lb-selfbot_discordgo_EventHandler is an interface wrapper for EventHandler type
type _github_com_lb-selfbot_discordgo_EventHandler struct {
	IValue  interface{}
	WHandle func(a0 *Session, a1 interface{})
	WType   func() string
}

func (W _github_com_lb-selfbot_discordgo_EventHandler) Handle(a0 *Session, a1 interface{}) {
	W.WHandle(a0, a1)
}
func (W _github_com_lb-selfbot_discordgo_EventHandler) Type() string {
	return W.WType()
}

// _github_com_lb-selfbot_discordgo_EventInterfaceProvider is an interface wrapper for EventInterfaceProvider type
type _github_com_lb-selfbot_discordgo_EventInterfaceProvider struct {
	IValue interface{}
	WNew   func() interface{}
	WType  func() string
}

func (W _github_com_lb-selfbot_discordgo_EventInterfaceProvider) New() interface{} {
	return W.WNew()
}
func (W _github_com_lb-selfbot_discordgo_EventInterfaceProvider) Type() string {
	return W.WType()
}

// _github_com_lb-selfbot_discordgo_InteractionData is an interface wrapper for InteractionData type
type _github_com_lb-selfbot_discordgo_InteractionData struct {
	IValue interface{}
	WType  func() InteractionType
}

func (W _github_com_lb-selfbot_discordgo_InteractionData) Type() InteractionType {
	return W.WType()
}

// _github_com_lb-selfbot_discordgo_MessageComponent is an interface wrapper for MessageComponent type
type _github_com_lb-selfbot_discordgo_MessageComponent struct {
	IValue       interface{}
	WMarshalJSON func() ([]byte, error)
	WType        func() ComponentType
}

func (W _github_com_lb-selfbot_discordgo_MessageComponent) MarshalJSON() ([]byte, error) {
	return W.WMarshalJSON()
}
func (W _github_com_lb-selfbot_discordgo_MessageComponent) Type() ComponentType {
	return W.WType()
}
